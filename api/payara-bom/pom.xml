<!--
  ~    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  ~
  ~    Copyright (c) 2019-2023 Payara Foundation and/or its affiliates. All rights reserved.
  ~
  ~    The contents of this file are subject to the terms of either the GNU
  ~    General Public License Version 2 only ("GPL") or the Common Development
  ~    and Distribution License("CDDL") (collectively, the "License").  You
  ~    may not use this file except in compliance with the License.  You can
  ~    obtain a copy of the License at
  ~    https://github.com/payara/Payara/blob/master/LICENSE.txt
  ~    See the License for the specific
  ~    language governing permissions and limitations under the License.
  ~
  ~    When distributing the software, include this License Header Notice in each
  ~    file and include the License file at glassfish/legal/LICENSE.txt.
  ~
  ~    GPL Classpath Exception:
  ~    The Payara Foundation designates this particular file as subject to the "Classpath"
  ~    exception as provided by the Payara Foundation in the GPL Version 2 section of the License
  ~    file that accompanied this code.
  ~
  ~    Modifications:
  ~    If applicable, add the following below the License Header, with the fields
  ~    enclosed by brackets [] replaced by your own identifying information:
  ~    "Portions Copyright [year] [name of copyright owner]"
  ~
  ~    Contributor(s):
  ~    If you wish your version of this file to be governed by only the CDDL or
  ~    only the GPL Version 2, indicate your decision by adding "[Contributor]
  ~    elects to include this software in this distribution under the [CDDL or GPL
  ~    Version 2] license."  If you don't indicate a single choice of license, a
  ~    recipient has the option to distribute your version of this file under
  ~    either the CDDL, the GPL Version 2 or to extend the choice of license to
  ~    its licensees as provided above.  However, if you add GPL Version 2 code
  ~    and therefore, elected the GPL Version 2 license, then the option applies
  ~    only if the new code is made subject to such option by the copyright
  ~    holder.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.api</groupId>
        <artifactId>api-parent</artifactId>
        <version>6.2023.11</version>
    </parent>

    <artifactId>payara-bom</artifactId>
    <name>Payara Bill of Materials</name>
    <packaging>pom</packaging>
    <description>List of dependencies provided by and compatible with specific Payara Release</description>

    <!-- Override to stop flatten plugin resolving it to an incorrect URL using parent artifact IDs -->
    <url>https://github.com/payara/Payara/</url>

    <!-- Don't inherit SCM from parent since flatten resolves it incorrectly in a similar manner to the URL -->
    <scm>
        <url>https://github.com/payara/Payara/tree/master</url>
        <connection>scm:git:git://github.com/payara/payara.git</connection>
        <developerConnection>scm:git:ssh://github.com:payara/payara.git</developerConnection>
    </scm>

    <dependencyManagement>
        <dependencies>
            <!-- Public artifacts -->
            <dependency>
                <groupId>fish.payara.distributions</groupId>
                <artifactId>payara</artifactId>
                <version>${project.version}</version>
                <type>zip</type>
            </dependency>

            <dependency>
                <groupId>fish.payara.distributions</groupId>
                <artifactId>payara-web</artifactId>
                <version>${project.version}</version>
                <type>zip</type>
            </dependency>

            <dependency>
                <groupId>fish.payara.distributions</groupId>
                <artifactId>payara-ml</artifactId>
                <version>${project.version}</version>
                <type>zip</type>
            </dependency>

            <dependency>
                <groupId>fish.payara.distributions</groupId>
                <artifactId>payara-web-ml</artifactId>
                <version>${project.version}</version>
                <type>zip</type>
            </dependency>

            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>ejb-http-client</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-embedded-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-embedded-all</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>fish.payara.extras</groupId>
                <artifactId>payara-micro</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>fish.payara.server.appclient</groupId>
                <artifactId>payara-client</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- APIs -->
            <!-- Jakarta BOM. May be used in import scope by client instead of aggregate -->
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-bom</artifactId>
                <version>${jakartaee.api.version}</version>
                <type>pom</type>
            </dependency>

            <!-- Microprofile API release aggregate. Can also be used as a BOM -->
            <dependency>
                <groupId>org.eclipse.microprofile</groupId>
                <artifactId>microprofile</artifactId>
                <version>${microprofile-release.version}</version>
                <type>pom</type>
                <scope>provided</scope>
            </dependency>

            <!-- Tooling -->
            <!-- Embedded databases available in the server -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2db.version}</version>
            </dependency>

            <!-- Security connectors for standalone use -->
            <dependency>
                <groupId>fish.payara.security.connectors</groupId>
                <artifactId>openid-standalone</artifactId>
                <version>${payara.security-connectors.version}</version>
            </dependency>

            <!-- Arquillian containers (test scope)-->
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>arquillian-payara-server-remote</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>arquillian-payara-server-embedded</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>arquillian-payara-server-managed</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>arquillian-payara-micro-managed</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>payara-micro-remote</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>payara-micro-deployer</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <type>war</type>
                <scope>test</scope>
            </dependency>

            <!-- These are hopefully no longer needed with this BOM, but just to be sure -->
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>payara-client-ee9</artifactId>
                <version>${payara-arquillian-container.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-bom</artifactId>
                <version>${opentelemetry.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- packaged components -->
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-api</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-common</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-metrics</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-logs</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-extension-autoconfigure-spi</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-semconv</artifactId>
                <version>${opentelemetry.alpha.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-opentracing-shim</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-context</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-exporter-otlp</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-sdk-trace</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-exporter-otlp-common</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-exporter-common</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-annotations</artifactId>
                <version>${opentelemetry.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-annotations-support</artifactId>
                <version>${opentelemetry.alpha.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${opentracing.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-noop</artifactId>
                <version>${opentracing.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Implementations -->
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.faces</artifactId>
                <version>${mojarra.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.woodstox</groupId>
                <artifactId>woodstox-core</artifactId>
                <version>${woodstox.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.soteria</groupId>
                <artifactId>soteria.spi.bean.decorator.weld</artifactId>
                <version>${jakarta.security.enterprise.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.core</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.jpa</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.sdo</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.dbws</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.oracle</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.antlr</artifactId>
                <version>${eclipselink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.asm</artifactId>
                <version>${eclipselink.asm.version}</version>
            </dependency>
            <!-- Annotation processor is best suited for provided scope -->
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
                <version>${eclipselink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.metro</groupId>
                <artifactId>webservices-osgi</artifactId>
                <version>${webservices.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.metro</groupId>
                <artifactId>webservices-extra-jdk-packages</artifactId>
                <version>${webservices.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.metro</groupId>
                <artifactId>webservices-api-osgi</artifactId>
                <version>${webservices.version}</version>
            </dependency>
            <!-- security for webservices -->
            <dependency>
                <groupId>org.apache.santuario</groupId>
                <artifactId>xmlsec</artifactId>
                <version>${org.apache.santuario.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.metro</groupId>
                <artifactId>webservices-extra-xmlsec</artifactId>
                <version>${webservices.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-extra-osgi</artifactId>
                <version>${jaxb-extra-osgi.version}</version>
            </dependency>

            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>${wsdl4j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.messaging.mq</groupId>
                <artifactId>imqjmx</artifactId>
                <version>4.4.2</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.mq</groupId>
                <artifactId>mq-distribution</artifactId>
                <version>${mq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>jakarta.servlet.jsp.jstl</artifactId>
                <version>${jstl-impl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse</groupId>
                <artifactId>yasson</artifactId>
                <version>${yasson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.parsson</groupId>
                <artifactId>parsson-media</artifactId>
                <version>${parsson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.ibm.jbatch</groupId>
                <artifactId>com.ibm.jbatch.container</artifactId>
                <version>${com.ibm.jbatch.container.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ibm.jbatch</groupId>
                <artifactId>com.ibm.jbatch.spi</artifactId>
                <version>${com.ibm.jbatch.spi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.enterprise.concurrent</artifactId>
                <version>${concurrent.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.istack</groupId>
                <artifactId>istack-commons-runtime</artifactId>
                <version>${istack-commons-runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.angus</groupId>
                <artifactId>angus-activation</artifactId>
                <version>${angus.activation.version}</version>
            </dependency>

            <!-- Other libraries -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven.flatten.plugin.version}</version>
                <configuration>
                    <flattenMode>bom</flattenMode>
                    <flattenDependencyMode>all</flattenDependencyMode>
                    <pomElements>
                        <dependencyManagement>expand</dependencyManagement>
                    </pomElements>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
