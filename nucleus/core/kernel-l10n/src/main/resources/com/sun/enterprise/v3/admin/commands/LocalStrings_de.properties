#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2013 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

create.jvm.options=erstellt JVM-Optionen in der Java-Konfiguration oder im Profiler-Element der Datei domain.xml.
create.jvm.options.jvm_option_name=Links vom Gleichheitszeichen (=) steht der Name der JVM-Option. Rechts vom Gleichheitszeichen (=) steht der Wert der JVM-Option. Ein Doppelpunkt (:) dient als Trennzeichen f\u00fcr mehrere Optionen.
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[--min-jvm=<version>]\n\t[--max-jvm=<version>]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options=entfernt JVM-Optionen aus der Java-Konfiguration oder aus Profiler-Elementen der Datei domain.xml
delete.jvm.options.jvm_option_name=Links vom Gleichheitszeichen (=) steht der Name der JVM-Option. Rechts vom Gleichheitszeichen (=) steht der Wert der JVM-Option. Ein Doppelpunkt (:) dient als Trennzeichen f\u00fcr mehrere Optionen.
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
list.jvm.options=listet JVM-Optionen in der Java-Konfiguration oder im Profiler-Element der Datei domain.xml auf.
list.jvm.options.success=Auflistung konfigurierter JVM-Optionen und Java-Systemeigenschaften auf angegebenem Ziel erfolgreich
list.jvm.options.failed=Auflistung von JVM-Optionen auf angegebenem Ziel war aus folgendem Grund nicht erfolgreich: {0}
create.jvm.options.success=Erstellen der angegebenen Option(en) auf angegebenem Ziel erfolgreich
delete.jvm.options.success=L\u00f6schen der angegebenen Option(en) auf angegebenem Ziel erfolgreich
delete.jvm.options.failed=L\u00f6schen der angegebenen Option(en) auf angegebenem Ziel war aus folgendem Grund nicht erfolgreich.\nDie aktuellen Konfigurationsoptionen wurden beibehalten
create.profiler.first=Noch kein Profiler konfiguriert. Erstellen Sie zun\u00e4chst einen Profiler.
created.message={0} Option(en) erstellt
no.option.created=Es wurden keine JVM-Optionen erstellt (m\u00f6glicherweise waren sie bereits vorhanden)
deleted.message={0} Option(en) gel\u00f6scht
no.option.deleted=Es wurden keine JVM-Optionen gel\u00f6scht (m\u00f6glicherweise waren sie nie in der Konfiguration vorhanden)
joe.exists=JVM-Option {0} ist bereits in der Konfiguration vorhanden. 
joe.invalid.start=JVM-Option {0} ist ung\u00fcltig, da sie nicht mit einem "-" beginnt
joe.invalid.cmd.syntax=Die Befehlszeile: {0} entspricht nicht der Syntax.\nZusammengefasst sollten alle Optionen mit einem "-" beginnen. Mehrere Optionen werden durch ":" getrennt.\nEin ":" innerhalb einer Option muss mit dem Escape-Zeichen "\\" versehen werden.\nDa die Shell Befehlsargumente interpretiert, achten Sie darauf, diese in Anf\u00fchrungszeichen zu setzen.\n
soft.invalid.xmx=Die angegebene JVM-Option {0} scheint einen ung\u00fcltigen maximalen Heap f\u00fcr JVM darzustellen. Vergewissern Sie sich, dass er g\u00fcltig ist, indem Sie list-jvm-options eingeben.
soft.xmx.exists=F\u00fcr die Konfiguration ist bereits eine maximale Heap-Gr\u00f6\u00dfe angegeben: {0}. \u00dcberpr\u00fcfen Sie die Java-Konfiguration durch Eingabe von list-jvm-options.
soft.xmx.smaller.than.xms=Die angegebene maximale Heap-Gr\u00f6\u00dfe {0} scheint kleiner zu sein als die minimale Heap-Gr\u00f6\u00dfe in der Konfiguration: {1}. JVM kann m\u00f6glicherweise nicht gestartet werden. Vergewissern Sie sich, dass dies g\u00fcltig ist, indem Sie list-jvm-options eingeben.
soft.invalid.xms=Die angegebene JVM-Option {0} scheint einen ung\u00fcltigen anf\u00e4nglichen Heap f\u00fcr JVM darzustellen. Vergewissern Sie sich, dass er g\u00fcltig ist, indem Sie list-jvm-options eingeben.
soft.xms.exists=F\u00fcr die Konfiguration ist bereits eine anf\u00e4ngliche Heap-Gr\u00f6\u00dfe angegeben: {0}. \u00dcberpr\u00fcfen Sie die Java-Konfiguration durch Eingabe von list-jvm-options.
soft.xms.larger.than.xmx=Die angegebene anf\u00e4ngliche Heap-Gr\u00f6\u00dfe {0} scheint gr\u00f6\u00dfer zu sein als die maximale Heap-Gr\u00f6\u00dfe in der Konfiguration: {1}. JVM kann m\u00f6glicherweise nicht gestartet werden. Vergewissern Sie sich, dass dies g\u00fcltig ist, indem Sie list-jvm-options eingeben.
#Generate JVM Report
server.unreachable=Der Server {0} ist anscheinend nicht erreichbar. Das bedeutet, dass er entweder nicht ausgef\u00fchrt wird oder dass ein interner Kommunikationsfehler vorliegt.
td.title=Vollst\u00e4ndiger Java-Thread-Dump {0} {1} {2}
thread.no=Anzahl Threads: {0}
daemon.thread.no=Anzahl Daemon-Threads: {0}
peak.thread.no=Maximale Anzahl der Livethreads seit Start der Java Virtual Machine bzw. seit dem Zur\u00fccksetzen des Maximalwerts: {0}
thread.contention.monitoring.supported=Ist Unterst\u00fctzung f\u00fcr \u00dcberwachung von Threadkonflikten in dieser JVM verf\u00fcgbar? [{0}]
thread.contention.monitoring.enabled=Ist \u00dcberwachung f\u00fcr Threadkonflikte aktiviert? [{0}]. Bei "false" sind einige Statistiken zur Threadsynchronisierung nicht verf\u00fcgbar.
thread.cputime.supported=Ist Unterst\u00fctzung f\u00fcr die CPU-Zeitmessung f\u00fcr Threads in dieser JVM verf\u00fcgbar? [{0}]
thread.cputime.enabled=Ist CPU-Zeitmessung f\u00fcr Threads aktiviert? [{0}]. Bei "false" sind die Threadausf\u00fchrungszeiten f\u00fcr keinen Thread verf\u00fcgbar.
execution.info=Informationen zur Threadausf\u00fchrung:
thread.title=Thread {0} thread-id: {1} thread-state: {2}
thread.waiting.on=Warten auf Sperre: {0}
thread.suspended=Angehalten
thread.in.native=Nativ-Ausf\u00fchrung
thread.stack.element=\t bei: {0}
no.deadlock=Kein Deadlock gefunden
sync.info=Threadsynchronisierungsstatistiken:
thread.blocked.times=Angabe, wie oft dieser Thread blockiert wurde (zur Eingabe/erneuten Eingabe eines Monitors): {0}
thread.blocked.totaltime=(Ungef\u00e4hre) Gesamtzeit, die sich der Thread im Status BLOCKED befand: {0} Millisekunden, seit die \u00dcberwachung von Threadkonflikten zuletzt aktiviert wurde.
thread.total.cpu.time=CPU-Gesamtzeit f\u00fcr diesen Thread: {0} Sekunden {1} Nanosekunden.
thread.cpu.user.time=CPU-Zeit auf Benutzerebene f\u00fcr diesen Thread: {0} Sekunden {1} Nanosekunden.
wait.times=Angabe, wie oft dieser Thread auf Benachrichtigung gewartet hat (d.\u00a0h. sich im Status WAITING oder TIMED_WAITING befand): {0}
lock.owner.details=Dieser Thread ist blockiert und wartet wegen einer Sperre, deren Eigent\u00fcmer derzeit Thread: {0}, ID: {1} ist
monitor.info=Derzeit von diesem Thread belegte oder angeforderte Objektmonitore: {0}
ownable.sync.info=Von diesem Thread belegte besitzbare Synchronizer (z.\u00a0B. ReentrantLock und ReentrantReadWriteLock): {0}
deadlocks.found=Folgende Threads wurden per Deadlock gesperrt:
m2hms={0} Stunden {1} Minuten {2} Sekunden
m2sms={0} Sekunden {1} Millisekunden
uptime=Die Betriebszeit der Java Virtual Machine: {0}
memory.pool.name=Speicherpoolname: {0}
memory.usage.init=Speicher, den die Java Virtual Machine anfangs beim Betriebssystem angefordert hat: {0} Byte
memory.usage.comm=Speicher, den die Java Virtual Machine garantiert vom Betriebssystem erh\u00e4lt: {0} Byte
memory.usage.max=Maximaler Speicher, den die Java Virtual Machine m\u00f6glicherweise vom Betriebssystem erh\u00e4lt: {0} Byte. Beachten Sie, dass dieser Wert nicht garantiert werden kann.
memory.usage.used=Speicher, den die Java Virtual Machine derzeit belegt: {0} Byte
gc.name=Garbage Collector-Name: {0}
gc.numcol=Anzahl Collections mit diesem Garbage Collector: {0} Byte
gc.coltime=Garbage Collection-Zeit: {0}
heap.mem.usage=Heap-Speicherauslastung:
nonheap.mem.usage=Nicht-Heap-Speicherauslastung:
obj.fin.pending=Ungef\u00e4hre Anzahl Objekte, deren Beendigung aussteht: {0}
classloading.info=Laden und Entladen von Klassen in der Java Virtual Machine:
classes.loaded=Anzahl Klassen, die derzeit in der Java Virtual Machine geladen sind: {0}
classes.total=Anzahl Klassen, die seit dem Hochfahren in der Java Virtual Machine geladen wurden: {0}
classes.unloaded=Anzahl Klassen, die aus der Java Virtual Machine entladen wurden: {0}
complilation.info=Just-In-Time-(JTI-)Kompilierungsinformationen in der Java Virtual Machine:
compilation.monitor.status=Java Virtual Machine-Kompilierungs\u00fcberwachung zul\u00e4ssig: {0}
jit.compilar.name=Name des Just-In-Time-Compilers (JIT): {0}
compilation.time=F\u00fcr Kompilierung aufgewendete Zeit gesamt: {0}
os.info=Betriebssysteminformationen:
os.name=Name des Betriebssystems: {0}
os.arch=Bin\u00e4rarchitekturname des Betriebssystems: {0}, Version: {1}
os.nproc=Anzahl f\u00fcr das Betriebssystem verf\u00fcgbare Prozessoren: {0}
os.load=Systemlast auf den verf\u00fcgbaren Prozessoren w\u00e4hrend der letzten Minute: {0}. (Summe aus ausgef\u00fchrten und in der Queue befindlichen ausf\u00fchrbaren Entitys pro Minute)
rt.info=Allgemeine Java Runtime Environment-Informationen f\u00fcr die VM: {0}
rt.bcp=JRE-BootClassPath: {0}
rt.cp=JRE-ClassPath: {0}
rt.libpath=JRE-Pfad zur nativen Library: {0}
rt.nvv=JRE-Name: {0} Anbieter: {1} Version: {2}
rt.sysprops=Liste der Systemeigenschaften f\u00fcr die Java Virtual Machine:
summary.title=**** Java Virtual Machine [Application Server-Instanzname: {0}] Zusammenfassung ****
class.info.title=**** Klassenstatistiken f\u00fcr Java Virtual Machine [Application Server-Instanzname: {0}] ****
thread.dump.title=**** Thread-Dump f\u00fcr Java Virtual Machine [Application Server-Instanzname: {0}] ****
memory.info.title=**** Speicherinformationen (Perm Gen, Eden Space usw.) f\u00fcr Java Virtual Machine [Application Server-Instanzname: {0}] ****
#logging information
logging.config.file=G\u00fcltige Logging-Eigenschaftendatei: [{0}]. Wenn keine Angabe vorhanden ist, handelt es sich um die JRE-Standarddatei.
reg.loggers=Anzahl derzeit in der JVM registrierte Logger: [{0}]. Details folgen:
logger.details.1=Wenn die Ebene leer ist, wird sie aus dem \u00fcbergeordneten Logger \u00fcbernommen
logger.details.2=Der \u00fcbergeordnete Logger ist der n\u00e4chste vorhandene \u00fcbergeordnete Logger
list.of.loggers=Logger-Name | Logging-Ebene | Name des \u00fcbergeordneten Loggers
create.threadpool.duplicate=Threadpool mit dem Namen {0} ist bereits vorhanden.
create.threadpool.failed=Erstellen von {0} war nicht erfolgreich. Grund: {1}
create.threadpool.deprecated.workqueues=Verworfene Syntax: Option --workqueues wurde f\u00fcr Befehl create-threadpool verworfen.
list.thread.pools.failed=Auflistung der Threadpools war nicht erfolgreich. Grund: {0}
delete.threadpool.notexists=Threadpool mit Namen {0} ist nicht vorhanden.
delete.threadpool.failed=L\u00f6schen von Threadpool war nicht erfolgreich. Grund: {0}
attach.wrong.commandinstance.id=Job mit ID {0} ist nicht vorhanden.
attach.finished=Befehl {0} mit Status {1} ausgef\u00fchrt.
unable.to.get.ManagedJobConfig=Das ManagedJobConfig-Bean kann nicht abgerufen werden.
failed.to.configure.ManagedJobConfig=Das ManagedJobConfig-Bean konnte nicht konfiguriert werden

getPayload.wrong.commandinstance.id=Job mit ID {0} ist nicht vorhanden.
getPayload.nopayload=Ausgehende Payload ist nicht vorhanden.
getPayload.unsupported=Payload-Typ wird nicht unterst\u00fctzt. Daten k\u00f6nnen nicht heruntergeladen werden.
