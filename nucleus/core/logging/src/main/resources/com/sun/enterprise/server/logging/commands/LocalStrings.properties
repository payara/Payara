#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2013 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

set.log.level.usagetext=set-log-level\n\t[--help]\n\t[--target=target]\n\tlogger-name=logger-level[:logger-name=logger-level]*
set.log.level.invalid=Invalid logger level found {0}.  Valid levels are: SEVERE, WARNING, INFO, FINE, FINER, FINEST
set.log.level.failed=Could not set logger levels for {0}.
set.log.level.properties={0} package set with log level {1}.
set.log.level.success=These logging levels are set for {0}.
collectlogfiles.outputPath.notexist=Retrieve File Path does not exist. Please enter correct value for Retrieve File Path.
collectlogfiles.creatingZip=Error while creating zip file {0}.
collectlogfiles.creatingTempDirectory=Error while creating temp directory on server for downloading log files.
collectlogfiles.errInstanceDownloading=Error while downloading log files from {0}.
collectlogfiles.copyingZip=Error while copying zip file to {0}.
collectlogfiles.successInstanceDownloading=Log files are downloaded for {0}.
collectlogfiles.instance.success=Created Zip file under {0}.
collectlogfiles.cluster.success={0} Created Zip file under {1}.
collectlogfiles.noinstance=No instances are defined as part of {0}. So there are no files to zip.
collectlogfiles.errGettingLogFiles=Error while getting log file attribute for {0}.
invalid.target.sys.props=Invalid target: {0}. Valid default target is a server named ''server'' (default) or cluster name.
invalid.target.sys.props1=Instance {0} is part of the Cluster so valid target value is {1}.
set.log.attribute.properties={0} logging attribute value set to {1}.
set.log.attribute.invalid=Invalid logging attribute name or value {0}={1}.
set.log.attribute.success=The logging attributes are saved successfully for {0}.
set.log.attribute.failed=Could not set logging attributes for {0}.
get.log.attribute.failed=Could not get logging attributes for {0}.
get.log.level.failed=Could not get logging levels for {0}.
delete.log.level.success=These logging levels are deleted for {0}.
delete.log.level.failed=Could not delete logger levels for {0}.
list.loggers=Lists the public loggers along with their source subsystem names and descriptions.
list.loggers.failed=Error listing loggers: {0}
list.loggers.header.name=Logger Name
list.loggers.header.subsystem=Subsystem
list.loggers.header.description=Logger Description
rotated.log.message=Rotated log on instance named ''{0}''.
set.log.file.format=Sets the Formatter to be used for the server log file.
set.log.file.format.target=The DAS, stand alone instance or cluster name to which this configuration change applies.
set.log.file.format.formatter=Specifies the formatter for the log file, the value could be either ODL, ULF or the fully qualified name of the java.util.logging.Formatter class.
set.log.file.format.success=The log file formatter is set to {0} for instance {1}.
