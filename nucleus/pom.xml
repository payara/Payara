<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2011-2016 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->
<!--"Portions Copyright [2016-2019] [Payara Foundation and/or its affiliates]" -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.java</groupId>
        <artifactId>jvnet-parent</artifactId>
        <version>5</version>
        <relativePath />
    </parent>

    <groupId>fish.payara</groupId>
    <artifactId>payara-nucleus-parent</artifactId>
    <version>5.193-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Payara Nucleus Parent Project</name>
    <url>https://github.com/payara/Payara</url>

    <scm>
        <connection>scm:git:git@github.com:payara/payara.git</connection>
        <url>https://github.com/payara/Payara/tree/master</url>
        <developerConnection>scm:git:git@github.com:payara/payara.git</developerConnection>
        <tag>payara-server-5.193-SNAPSHOT</tag>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/payara/Payara/issues</url>
    </issueManagement>

    <licenses>
      <license>
        <name>CDDL + GPLv2 with classpath exception</name>
        <url>https://raw.githubusercontent.com/payara/Payara/master/LICENSE.txt</url>
        <distribution>repo</distribution>
        <comments>A business-friendly OSS license</comments>
      </license>
    </licenses>


    <developers>
        <developer>
            <name>Payara Team</name>
            <email>info@payara.fish</email>
            <organization>Payara Foundation</organization>
            <organizationUrl>http://www.payara.fish</organizationUrl>
        </developer>
    </developers>

    <repositories>
        <!-- Try Maven central first, not last, which happens when omitted here -->
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>

        <repository>
            <id>jvnet-nexus-releases</id>
            <name>Java.net Releases Repositories</name>
            <url>https://maven.java.net/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>jvnet-nexus-staging</id>
            <name>Java.net Staging Repositories</name>
            <url>https://maven.java.net/content/repositories/staging</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>jvnet-nexus-promoted</id>
            <name>Java.net Promoted Repositories</name>
            <url>https://maven.java.net/content/repositories/promoted/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>jvnet-nexus-1074</id>
            <name>Java.net orgglassfish-1074 Repositories</name>
            <url>https://maven.java.net/content/repositories/orgglassfish-1074/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>eclipse.microprofile</id>
            <name>Eclipse MicroProfile Repository</name>
            <url>https://repo.eclipse.org/content/groups/microprofile/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <!-- Enable this to allow downloading Eclipse MicroProfile Snapshot builds -->
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <!--  
        <repository>
           <id>payara-patched-externals-local</id>
           <name>Payara Patched Externals local</name>
           <url>file:///opt/PayaraDev/Payara_PatchedProjects</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        -->

        <repository>
           <id>payara-patched-externals</id>
	   <name>Payara Patched Externals</name>
	   <url>https://raw.github.com/payara/Payara_PatchedProjects/master</url>
	   <!--<url>file:///opt/PayaraDev/Payara_PatchedProjects</url>-->
           	<releases>
           		<enabled>true</enabled>
           	</releases>
            	<snapshots>
                	<enabled>false</enabled>
            	</snapshots>
        </repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>jvnet-nexus-promoted</id>
            <name>Java.net Promoted Repositories</name>
            <url>https://maven.java.net/content/repositories/promoted/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
           <id>payara-patched-externals</id>
	   <name>Payara Patched Externals</name>
	   <url>https://raw.github.com/payara/Payara_PatchedProjects/master</url>
	   <!--<url>file:///opt/PayaraDev/Payara_PatchedProjects</url> -->
           	<releases>
           		<enabled>true</enabled>
           	</releases>
            	<snapshots>
                	<enabled>true</enabled>
            	</snapshots>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <build.id>${build.number}</build.id> <!-- on Hudson and RE, this gets replaced by real build ID -->
        <jdk.version>1.8.0</jdk.version>
        <javase.version>1.8</javase.version>
        <javadoc.skip>false</javadoc.skip>

        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
        <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
        <maven.site.plugin.version>3.7.1</maven.site.plugin.version>
        <maven.assembly.plugin.version>3.1.0</maven.assembly.plugin.version>
        <maven.jar.plugin.version>3.1.1</maven.jar.plugin.version>
        <maven.antrun.plugin.version>1.8</maven.antrun.plugin.version>
        <maven.remote.resources.plugin.version>1.6.0</maven.remote.resources.plugin.version>
        <maven.eclipse.plugin.version>2.10</maven.eclipse.plugin.version>
        <maven.invoker.plugin.version>3.1.0</maven.invoker.plugin.version>
        <maven.war.plugin.version>3.2.2</maven.war.plugin.version>
        <maven.makepkgs.plugin.version>0.6.2</maven.makepkgs.plugin.version>
        <maven.jaxb2.plugin.version>0.14.0</maven.jaxb2.plugin.version>
        <maven.bundle.plugin.version>4.1.0</maven.bundle.plugin.version>
        <maven.antlr.plugin.version>2.2</maven.antlr.plugin.version>
        <maven.enforcer.plugin.version>3.0.0-M2</maven.enforcer.plugin.version>
        <maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
        <maven.javadoc.plugin.version>3.0.1</maven.javadoc.plugin.version>
        <maven.jaxws.plugin.version>2.5</maven.jaxws.plugin.version>
        <maven.apt.plugin.version>1.0-alpha-5</maven.apt.plugin.version>
        <maven.build.helper.plugin.version>3.0.0</maven.build.helper.plugin.version>
        <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
        <maven.deploy.plugin.version>3.0.0-M1</maven.deploy.plugin.version>
        <maven.plugin.api.version>3.6.0</maven.plugin.api.version>

        <deploy.skip>true</deploy.skip>

        <!-- Java EE -->
        <javaee.api.version>8.0</javaee.api.version>

        <!-- Servlet -->
        <servlet-api.version>4.0.2</servlet-api.version>
        <grizzly.version>2.4.3.payara-p9</grizzly.version>

        <!-- Requires JDK8u161 or above-->
        <grizzly.npn.version>1.8</grizzly.npn.version>
        
        <!-- Microprofile -->
        <microprofile-config.version>1.3</microprofile-config.version>
        <microprofile-opentracing.version>1.3.1</microprofile-opentracing.version>

        <!-- JAX-RS -->
        <jax-rs-api.spec.version>2.1.5</jax-rs-api.spec.version>
        <jax-rs-api.impl.version>2.1.5</jax-rs-api.impl.version>
        <jersey.version>2.29.payara-p3</jersey.version>

        <!-- Bean Validation -->
        <javax.validation.version>2.0.1.Final</javax.validation.version>
        <hibernate.validator.version>6.0.16.Final</hibernate.validator.version>
        <hibernate.validator-cdi.version>6.0.16.Final</hibernate.validator-cdi.version>

        <!-- Expression language -->
        <javax.el.version>3.0.1-b11</javax.el.version>
        <javax.el-api.version>3.0.1-b06</javax.el-api.version>

        <!-- JAX-B -->
        <jaxb-api.version>2.3.2</jaxb-api.version>
        <jaxb.version>2.3.2</jaxb.version>

        <!-- Cache -->
        <javax.cache-api.version>1.1.0</javax.cache-api.version>

        <!-- JavaMail -->
        <mail.version>1.6.3</mail.version>

        <management-api.version>1.1-rev-1</management-api.version>

        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>


        <!-- Other -->

        <hk2.version>2.5.0-b61.payara-p3</hk2.version>
        <hk2.plugin.version>2.5.0-b61.payara-p3</hk2.plugin.version>
        <tiger.types.version>1.4.payara-p1</tiger.types.version>

        <glassfish-corba.version>4.1.1.payara-p3</glassfish-corba.version>
        <stax-api.version>1.0-2</stax-api.version>
        <saaj-api.version>1.4.0</saaj-api.version>

        <!-- Library for introspecting types with full generic information including resolving of field and method types. -->
        <classmate.version>1.5.0</classmate.version>
        <jboss.logging.version>3.3.2.Final</jboss.logging.version>
        <!-- Javassist (JAVA programming ASSISTant) makes Java bytecode manipulation simple. It is a class library for editing bytecodes in Java. -->
        <javassist.version>3.24.1-GA</javassist.version>

        <!-- A pure Java implementation of the SSH-2 protocol, a successor to Ganymed  -->
        <trilead-ssh2.version>build212-hudson-6</trilead-ssh2.version>

        <!-- Primitive Function Library (PFL); a library of simple utilities used by Glassfish -->
        <pfl.version>4.0.2.payara-p1</pfl.version>
        <!-- GlassFish MBean Annotation Library -->
        <gmbal.version>4.0.0</gmbal.version>
        <antlr.version>2.7.7</antlr.version>
        
        <commons-io.version>2.6</commons-io.version>

        <!-- Jackson is a high-performance JSON processor (parser, generator) -->
        <jackson.version>2.9.9</jackson.version>
        <!-- SnakeYAML is required for the YAML conversion in Jackson -->
        <snakeyaml.version>1.24</snakeyaml.version>

        <jsonp.version>1.1.5</jsonp.version>

        <mimepull.version>1.9.11</mimepull.version>
        
        <opentracing.version>0.31.0</opentracing.version>

        <jline.version>3.11.0</jline.version>

        <!-- Apache Felix is an open source implementation of the OSGi Core Release 6 framework specification. -->
        <org.apache.felix.main.version>6.0.2</org.apache.felix.main.version>
        <org.apache.felix.webconsole.version>4.3.8</org.apache.felix.webconsole.version>
        <org.apache.felix.eventadmin.version>1.5.0</org.apache.felix.eventadmin.version>
        <org.apache.felix.shell.version>1.4.3</org.apache.felix.shell.version>
        <org.apache.felix.gogo.runtime.version>1.1.2</org.apache.felix.gogo.runtime.version>
        <org.apache.felix.gogo.shell.version>1.1.2</org.apache.felix.gogo.shell.version>
        <org.apache.felix.gogo.command.version>1.1.0</org.apache.felix.gogo.command.version>
        <org.apache.felix.fileinstall.version>3.6.4.payara-p1</org.apache.felix.fileinstall.version>
        <org.apache.felix.configadmin.version>1.9.14</org.apache.felix.configadmin.version>
        <org.apache.felix.scr.version>2.1.14</org.apache.felix.scr.version>
        <org.apache.felix.bundlerepository.version>2.0.10</org.apache.felix.bundlerepository.version>

        <!-- Java Business Integration (JBI) is a specification for an approach to implementing a service-oriented architecture (SOA).  -->
        <jbi.version>1.0</jbi.version>
        <glassfish-management-api.version>3.2.1-b002.payara-p1</glassfish-management-api.version>
        <btrace.version>1.2.3</btrace.version>
        <opendmk.version>1.0-b01-ea</opendmk.version>
        <l10n.version>3.1-b41</l10n.version>
        <asm.version>7.0</asm.version>
        <ha-api.version>3.1.12</ha-api.version>
        <hazelcast.version>3.12</hazelcast.version>
        <hazelcast.kubernetes.version>1.3.1</hazelcast.kubernetes.version>
        <smack.version>4.1.9</smack.version>
        <jxmpp.version>0.4.2</jxmpp.version>
        <xpp3.version>1.1.4c_7</xpp3.version>
        <snmp4j.version>2.5.3-payara.p1</snmp4j.version>
        <mockito.version>2.2.6</mockito.version>
        <guava.version>19.0</guava.version>
        <jaxb-api.version>2.3.2</jaxb-api.version>
        <jaxb-impl.version>2.3.2</jaxb-impl.version>

        <!-- Build -->

        <glassfishbuild.version>3.2.20.payara-p1</glassfishbuild.version>
        <source-annotation-processor.version>1.0</source-annotation-processor.version>
        <logging-annotation-processor.version>1.8</logging-annotation-processor.version>
        <command-security-plugin.version>1.0.10.payara-p1</command-security-plugin.version>
        <command.security.maven.plugin.isFailureFatal>false</command.security.maven.plugin.isFailureFatal>
        <copyright-plugin.version>1.39</copyright-plugin.version>
        <nucleus.install.dir.name>nucleus</nucleus.install.dir.name>
        <ant.version>1.10.5</ant.version>
        <ant-launcher.version>1.10.5</ant-launcher.version>
        <metainf-services.version>1.8</metainf-services.version>

        <!-- Debug / analysis -->
        <findbugs.skip>true</findbugs.skip>
        <findbugs.threshold>High</findbugs.threshold>
        <findbugs.common>exclude-common.xml</findbugs.common>
        <findbugs.exclude />
        <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
        <findbugs.version>1.7</findbugs.version>
        <findbugs.glassfish.logging.validLoggerPrefixes>javax.enterprise</findbugs.glassfish.logging.validLoggerPrefixes>
        <jacoco.plugin.version>0.8.0</jacoco.plugin.version>

    </properties>

    <modules>
        <module>osgi-platforms</module>
        <module>cluster</module>
        <module>common</module>
        <module>core</module>
        <module>admin</module>
        <module>flashlight</module>
        <module>grizzly</module>
        <module>deployment</module>
        <module>payara-modules</module>
        <module>packager</module>
        <module>distributions</module>
        <module>security</module>
        <module>test-utils</module>
        <module>diagnostics</module>
        <module>resources</module>
        <module>resources-l10n</module>
        <module>hk2</module>
    </modules>

    <build>
        <defaultGoal>install</defaultGoal>
        <sourceDirectory>src/main/java</sourceDirectory>
        <finalName>${project.artifactId}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/.ade_path/**</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>

               <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
               </plugin>

               <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${javase.version}</source>
                        <target>${javase.version}</target>
                        <excludes>
                            <exclude>**/.ade_path/**</exclude>
                        </excludes>
                        <testExcludes>
                            <testExclude>**/.ade_path/**</testExclude>
                        </testExcludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <useSystemClassLoader>true</useSystemClassLoader>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin.version}</version>
                    <configuration>
                        <additionalOptions>
                            <additionalOption>${javadoc.options}</additionalOption>
                        </additionalOptions>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven.release.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven.gpg.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <version>${maven.remote.resources.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${maven.eclipse.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>${maven.invoker.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.glassfish.hk2</groupId>
                    <artifactId>hk2-inhabitant-generator</artifactId>
                    <version>${hk2.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.glassfish.hk2</groupId>
                    <artifactId>osgiversion-maven-plugin</artifactId>
                    <version>${hk2.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.glassfish.hk2</groupId>
                    <artifactId>consolidatedbundle-maven-plugin</artifactId>
                    <version>${hk2.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.glassfish.hk2</groupId>
                    <artifactId>config-generator</artifactId>
                    <version>2.5.0-b53</version>
                </plugin>

                <plugin>
                    <groupId>org.jvnet.maven-antrun-extended-plugin</groupId>
                    <artifactId>maven-antrun-extended-plugin</artifactId>
                    <version>1.43</version>
                </plugin>
                <plugin>
                    <groupId>org.jvnet.updatecenter2</groupId>
                    <artifactId>maven-makepkgs-plugin</artifactId>
                    <version>${maven.makepkgs.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jvnet.jaxb2.maven2</groupId>
                    <artifactId>maven-jaxb2-plugin</artifactId>
                    <version>${maven.jaxb2.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>${maven.bundle.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.glassfish.build</groupId>
                    <artifactId>glassfishbuild-maven-plugin</artifactId>
                    <version>${glassfishbuild.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>antlr-maven-plugin</artifactId>
                    <version>${maven.antlr.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxws-maven-plugin</artifactId>
                    <version>${maven.jaxws.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>${maven.apt.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.build.helper.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <configuration>
                        <skip>${maven.test.skip}</skip>
                        <propertyName>argLine</propertyName>
                        <destFile>${basedir}/target/jacoco.exec</destFile>
                         <append>true</append>
                        <excludes>
                            <exclude>**/Q*.*</exclude>
                        </excludes>
                    </configuration>
                    
                    <executions>
                        <execution>
                            <id>default-prepare-agent</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-prepare-agent-integration</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>default-report-integration</id>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[${jdk.version},18.9)</version>
                                    <message>You need JDK8 (${jdk.version}) or JDK11</message>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>[3.0.3,3.2.1],[3.2.3,)</version>
                                <message>You need Maven greater than 3.0.3 (3.2.2 not supported)</message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- force cleaning of the local repository
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>purge-local-dependencies</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>purge-local-repository</goal>
                        </goals>
                        <configuration>
                            <resolutionFuzziness>groupId</resolutionFuzziness>
                            <includes>
                                <include>jakarta.ejb</include>
                                <include>jakarta.transaction</include>
                                <include>javax.resource</include>
                                <include>javax.enterprise.concurrent</include>
                                <include>javax.ws.rs</include>
                                <include>javax.xml.registry</include>
                                <include>javax.websocket</include>
                                <include>org.glassfish.jersey</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
	    -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/manpages</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.glassfish.build</groupId>
                <artifactId>glassfishbuild-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <dir>${project.build.outputDirectory}</dir>
                </configuration>
                <executions>
                    <execution>
                        <id>echo</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>echo</goal>
                        </goals>
                        <configuration>
                            <message>Building in ${project.basedir} </message>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <addGroupIdToProjectName>true</addGroupIdToProjectName>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-inhabitant-generator</artifactId>
                <configuration>
                    <supportedProjectTypes>jar,ejb,war,glassfish-jar</supportedProjectTypes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <!-- By default, we don't export anything. -->
                    <Export-Package />
                    <instructions>
                        <!--
                            Read all the configuration from osgi.bundle file, if it exists.
                        -->
                        <_include>-osgi.bundle</_include>
                    </instructions>
                    <excludeDependencies>tools-jar</excludeDependencies>
                    <supportedProjectTypes>
                        <supportedProjectType>glassfish-jar</supportedProjectType>
                        <supportedProjectType>jar</supportedProjectType>
                    </supportedProjectTypes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.glassfish.build</groupId>
                <artifactId>command-security-maven-plugin</artifactId>
                <version>${command-security-plugin.version}</version>
                <configuration>
                    <isFailureFatal>${command.security.maven.plugin.isFailureFatal}</isFailureFatal>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>config-generator</artifactId>
                <version>2.5.0-b53</version>
                <configuration>
                    <excludes>**/.ade_path/**</excludes>
                    <supportedProjectTypes>jar,glassfish-jar</supportedProjectTypes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>true</useSystemClassLoader>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>foo</id>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>
Building ${project.artifactId} (final name ${project.build.finalName})
Running from ${basedir}
Output dir is ${project.build.outputDirectory}
Parent is ${project.parent}</echo>

                                <echo file="${basedir}/target/MANIFEST.MF">Manifest-Version: 1.0
                                </echo>

                                <copy toDir="${project.build.outputDirectory}/META-INF" overwrite="false">
                                    <fileset dir="${basedir}/target" includes="MANIFEST.MF">
                                        <present present="srconly" targetdir="${project.build.outputDirectory}/META-INF"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${artifact.artifactId}.${artifact.extension}</customClasspathLayout>
                        </manifest>

                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                    <excludes>
                        <exclude>**/.ade_path/**</exclude>
                    </excludes>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <includePom>true</includePom>
                    <excludes>
                        <exclude>**/.ade_path/**</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>osgiversion-maven-plugin</artifactId>

                <!--
                    Since we don't want a qualifier like b05 or SNAPSHOT to appear
                    in the package version attribute, we use the following goal to
                    populate a project property with an OSGi version which is
                    equivalent to maven version without qualifier and then use that
                    property in osgi.bundle while exporting.
                -->
                <configuration>
                    <dropVersionComponent>qualifier</dropVersionComponent>
                    <versionPropertyName>project.osgi.version</versionPropertyName>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <skip>${findbugs.skip}</skip>
                    <threshold>${findbugs.threshold}</threshold>
                    <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                    <excludeFilterFile>
                        ${findbugs.common},${findbugs.exclude}
                    </excludeFilterFile>
                    <jvmArgs>-Dfindbugs.glassfish.logging.validLoggerPrefixes=${findbugs.glassfish.logging.validLoggerPrefixes}</jvmArgs>
                    <plugins>
                        <plugin>
                            <groupId>org.glassfish.findbugs</groupId>
                            <artifactId>findbugs-logging-detectors</artifactId>
                            <version>${findbugs.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.glassfish.findbugs</groupId>
                        <artifactId>findbugs</artifactId>
                        <version>${findbugs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <detectOfflineLinks>false</detectOfflineLinks>
                    <skip>${javadoc.skip}</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <retryFailedDeploymentCount>10</retryFailedDeploymentCount>
                    <skip>${deploy.skip}</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>

            <!-- Servlet -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.grizzly</groupId>
                <artifactId>grizzly-bom</artifactId>
                <version>${grizzly.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- JAX-RS -->
            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jax-rs-api.impl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
            </dependency>


            <!-- Bean Validation (BVal) -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-cdi</artifactId>
                <version>${hibernate.validator-cdi.version}</version>
            </dependency>


            <!-- Expression Language (EL) -->
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>${javax.el-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${javax.el.version}</version>
            </dependency>


            <!-- JavaMail -->
            <dependency>
                <groupId>jakarta.mail</groupId>
                <artifactId>jakarta.mail-api</artifactId>
                <version>${mail.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${mail.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-bom</artifactId>
                <version>${hk2.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>osgi-resource-locator</artifactId>
                <version>1.0.1</version>
            </dependency>

            <dependency>
                <groupId>com.sun.xml.stream</groupId>
                <artifactId>sjsxp</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.stream</groupId>
                <artifactId>stax-api</artifactId>
                <version>${stax-api.version}</version>
            </dependency>
            <dependency>
                <groupId>antlr</groupId>
                <artifactId>antlr</artifactId>
                <version>${antlr.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.jbi</groupId>
                <artifactId>jbi</artifactId>
                <version>${jbi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.external</groupId>
                <artifactId>management-api</artifactId>
                <version>${glassfish-management-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.gmbal</groupId>
                <artifactId>gmbal</artifactId>
                <version>${gmbal.version}</version>
            </dependency>

            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>5.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>6.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.enterprise</artifactId>
                <version>5.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId> <!-- OSGi Companion Code for org.osgi.dto Version 1.0.0. -->
                <artifactId>org.osgi.dto</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.main</artifactId>
                <version>${org.apache.felix.main.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.webconsole</artifactId>
                <version>${org.apache.felix.webconsole.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.eventadmin</artifactId>
                <version>${org.apache.felix.eventadmin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.shell</artifactId>
                <version>${org.apache.felix.shell.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.runtime</artifactId>
                <version>${org.apache.felix.gogo.runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.shell</artifactId>
                <version>${org.apache.felix.gogo.shell.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.command</artifactId>
                <version>${org.apache.felix.gogo.command.version}</version>
            </dependency>
            <dependency> <!-- A utility to automatically install bundles from a directory.-->
               <groupId>org.apache.felix</groupId>
               <artifactId>org.apache.felix.fileinstall</artifactId>
                <version>${org.apache.felix.fileinstall.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId> <!-- Implementation of the OSGi Configuration Admin Service Specification 1.5  -->
                <artifactId>org.apache.felix.configadmin</artifactId>
                <version>${org.apache.felix.configadmin.version}</version>
            </dependency>
            <dependency>
               <groupId>org.apache.felix</groupId> <!-- Implementation of the Declarative Services specification 1.3 -->
               <artifactId>org.apache.felix.scr</artifactId>
               <version>${org.apache.felix.scr.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId> <!-- Bundle repository service. -->
                <artifactId>org.apache.felix.bundlerepository</artifactId>
                <version>${org.apache.felix.bundlerepository.version}</version>
            </dependency>


            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
             <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jvnet.mimepull</groupId>
                <artifactId>mimepull</artifactId>
                <version>${mimepull.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.help</groupId>
                <artifactId>javahelp</artifactId>
                <version>2.0.05</version>
            </dependency>
            <dependency>
                <groupId>com.sun.tools.btrace</groupId>
                <artifactId>btrace-agent</artifactId>
                <version>${btrace.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.tools.btrace</groupId>
                <artifactId>btrace-boot</artifactId>
                <version>${btrace.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.external</groupId>
                <artifactId>opendmk_jmxremote_optional_jar</artifactId>
                <version>${opendmk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.corba</groupId>
                <artifactId>glassfish-corba-orb</artifactId>
                <version>${glassfish-corba.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.corba</groupId>
                <artifactId>glassfish-corba-omgapi</artifactId>
                <version>${glassfish-corba.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.corba</groupId>
                <artifactId>glassfish-corba-csiv2-idl</artifactId>
                <version>${glassfish-corba.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.corba</groupId>
                <artifactId>glassfish-corba-internal-api</artifactId>
                <version>${glassfish-corba.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-basic</artifactId>
                <version>${pfl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-dynamic</artifactId>
                <version>${pfl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-basic-tools</artifactId>
                <version>${pfl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-asm</artifactId>
                <version>${pfl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-tf</artifactId>
                <version>${pfl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.pfl</groupId>
                <artifactId>pfl-tf-tools</artifactId>
                <version>${pfl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.kohsuke.metainf-services</groupId>
                <artifactId>metainf-services</artifactId>
                <version>${metainf-services.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.14.3</version>
            </dependency>
            <dependency>
                <groupId>org.jmockit</groupId>
                <artifactId>jmockit</artifactId>
                <version>1.40</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>2.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>${ant.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant-launcher</artifactId>
                <version>${ant-launcher.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun</groupId>
                <artifactId>ldapbp</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-commons</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jvnet.hudson</groupId>
                <artifactId>trilead-ssh2</artifactId>
                <version>${trilead-ssh2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.ha</groupId>
                <artifactId>ha-api</artifactId>
                <version>${ha-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>3.3.3</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.annotations</groupId>
                <artifactId>logging-annotation-processor</artifactId>
                <version>${logging-annotation-processor.version}</version>
            </dependency>
            <!-- This is currently used by osgi-shell cmd, but can be used for others as well -->
            <dependency>
                <groupId>org.jline</groupId>
                <artifactId>jline</artifactId>
                <version>${jline.version}</version>
            </dependency>
            <dependency>
                <groupId>org.fusesource.hawtjni</groupId>
                <artifactId>hawtjni-runtime</artifactId>
                <version>1.13</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.hk2.external</groupId>
                <artifactId>asm-repackaged</artifactId>
                <version>${hk2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.cache</groupId>
                <artifactId>cache-api</artifactId>
                <version>${javax.cache-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast</artifactId>
                <version>${hazelcast.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-kubernetes</artifactId>
                <version>${hazelcast.kubernetes.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-osgi</artifactId>
                <version>${jaxb-impl.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>ci</id>
            <modules>
                <module>tests</module>
            </modules>
        </profile>
    
        
        <profile>
            <id>default</id>
            <activation>
                <file>
                    <exists>${java.home}/../lib/tools.jar</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools-jar</artifactId>
                    <version>1</version>
                    <scope>system</scope>
                    <systemPath>${java.home}/../lib/tools.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>mac</id>
            <activation>
                <file>
                    <exists>${java.home}/../Classes/classes.jar</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools-jar</artifactId>
                    <version>1</version>
                    <scope>system</scope>
                    <systemPath>${java.home}/../Classes/classes.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>copyright</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.glassfish.copyright</groupId>
                            <artifactId>glassfish-copyright-maven-plugin</artifactId>
                            <version>${copyright-plugin.version}</version>
                            <configuration>
                                <excludeFile>
                                    copyright-exclude
                                </excludeFile>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <groupId>org.glassfish.main</groupId>
                                    <artifactId>copyright</artifactId>
                                    <version>${project.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        
        <profile>
            <id>embed-source</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>release-phase2</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>findbugs</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-findbugs</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>findbugs</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>doclint-java8-disable</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <properties>
                <javadoc.options>-Xdoclint:none</javadoc.options>
            </properties>
        </profile>

        <profile>
            <id>DeploySnapshot-Internal</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <distributionManagement>
                <snapshotRepository>
                    <id>payara-nexus</id>
                    <url>https://nexus.payara.fish/content/repositories/payara-snapshots</url>
                </snapshotRepository>
            </distributionManagement>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>payara-nexus</serverId>
                            <nexusUrl>https://nexus.payara.fish/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>DeploySnapshot-Sonatype</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
            </distributionManagement>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
         <profile>
            <id>CodeCoverage</id>
            <activation>
                <property>
                    <name>BUILD_NUMBER</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>
    
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>findbugs-maven-plugin</artifactId>
                            <version>${findbugs-maven-plugin.version}</version>
                            <configuration>
                                <skip>${findbugs.skip}</skip>
                                <threshold>${findbugs.threshold}</threshold>
                                <excludeFilterFile>
                                    exclude-common.xml,${findbugs.exclude}
                                </excludeFilterFile>
                            </configuration>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    
</project>
