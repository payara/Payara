<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.server.internal.tests</groupId>
        <artifactId>payara-tests</artifactId>
        <version>5.194-SNAPSHOT</version>
    </parent>
    <artifactId>test-containers</artifactId>
    <name>Payara Test Containers Suite</name>
    <packaging>jar</packaging>

    <properties>
        <docker.images.timeoutInSeconds>900</docker.images.timeoutInSeconds>
        <docker.payara.directory.shared>${project.build.directory}/shared</docker.payara.directory.shared>
<!--         <docker.payara.image.base>ubuntu:19.10</docker.payara.image.base> -->
        <docker.payara.image.base>debian:10.1-slim</docker.payara.image.base>
        <docker.payara.image.forceNew>false</docker.payara.image.forceNew>
<!--         <docker.payara.jdkPackageId>openjdk-8-jdk-headless</docker.payara.jdkPackageId> -->
        <docker.payara.jdkPackageId>openjdk-11-jdk-headless</docker.payara.jdkPackageId>
        <docker.payara.jvm.xms>256m</docker.payara.jvm.xms>
        <docker.payara.jvm.xmx>1g</docker.payara.jvm.xmx>
        <docker.payara.jvm.xss>228k</docker.payara.jvm.xss>
        <docker.payara.memory.totalInGB>2</docker.payara.memory.totalInGB>
        <docker.payara.port.admin>4848</docker.payara.port.admin>
        <docker.payara.port.http>8080</docker.payara.port.http>
        <docker.payara.port.https>8181</docker.payara.port.https>
        <docker.payara.host>payara-test-docker</docker.payara.host>
        <docker.payara.version>${project.version}</docker.payara.version>

        <docker.mysql.image.forceNew>false</docker.mysql.image.forceNew>
        <docker.mysql.image.base>mysql:8.0.18</docker.mysql.image.base>
        <docker.mysql.host>tc-mysql</docker.mysql.host>
        <docker.mysql.memory.totalInGB>1</docker.mysql.memory.totalInGB>
        <docker.mysql.port>3306</docker.mysql.port>
        <docker.mysql.user>mysql</docker.mysql.user>
        <docker.mysql.password>mysqlpassword</docker.mysql.password>

        <maven.test.jvmoptions.memory.sizes>-Xss512k -Xms256m -Xmx1g -XX:MaxDirectMemorySize=512m</maven.test.jvmoptions.memory.sizes>
        <maven.test.jvmoptions.memory.gc>-verbose:gc -XX:+UseG1GC -XX:+UseStringDeduplication</maven.test.jvmoptions.memory.gc>
        <maven.test.jvmoptions.display>-Djava.awt.headless=true</maven.test.jvmoptions.display>
        <maven.test.jvmoptions.locale>-Duser.language=en -Duser.region=US</maven.test.jvmoptions.locale>
        <maven.test.jvmoptions.custom></maven.test.jvmoptions.custom>
        <maven.test.jvmoptions>
          ${maven.test.jvmoptions.memory.sizes}
          ${maven.test.jvmoptions.memory.gc}
          ${maven.test.jvmoptions.display}
          ${maven.test.jvmoptions.locale}
          ${maven.test.jvmoptions.custom}
        </maven.test.jvmoptions>
        <failsafe.argLine>${maven.test.jvmoptions}</failsafe.argLine>
        <surefire.argLine>${maven.test.jvmoptions}</surefire.argLine>

        <slf4j.version>1.7.28</slf4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Arquillian uses very old -->
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>3.1.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <type>pom</type>
                <version>1.5.0.Final</version>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>fish.payara.distributions</groupId>
            <artifactId>payara</artifactId>
            <version>${docker.payara.version}</version>
            <type>glassfish-distribution</type>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- deployment-client is not tested here, but used as real test dependency, -->
        <!-- that's why we use some stable and reliable version -->
        <!-- FIXME: change version after the release, 5.193.1 is not in repos and older are broken -->
        <dependency>
            <groupId>fish.payara.server.internal.deployment</groupId>
            <artifactId>deployment-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- WARNING: unreleased locally built dependency! -->
        <dependency>
            <groupId>io.github.zforgo.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <version>0.1.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-persistence-dbunit</artifactId>
            <version>1.0.0.Alpha7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.35.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- depends on JUnit4 -->
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.12.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <version>1.12.2</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.18</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.6.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- If we skip this dependency, jersey-client throws java.lang.IllegalStateException: InjectionManagerFactory not found. -->
        <!-- With that we must have META-INF/beans.xml in src/test/resources -->
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-cdi2-se</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>3.0.5.Final</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>manual.properties</include>
                    <include>test.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>log4j.properties</include>
                    <include>server-side/**</include>
                    <include>META-INF/**</include>
                    <include>*.xml</include>
                    <include>*.json</include>
                    <include>*.sql</include>
                </includes>
                <filtering>false</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${docker.payara.directory.shared}</outputDirectory>
                            <includeArtifactIds>payara</includeArtifactIds>
                            <includeTypes>glassfish-distribution</includeTypes>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <trimStackTrace>false</trimStackTrace>
                            <failIfNoTests>true</failIfNoTests>
                            <verbose>true</verbose>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <argLine>${failsafe.argLine}</argLine>
                            <includes>
                                <include>**/*ITest.java</include>
                                <include>**/*PTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <trimStackTrace>false</trimStackTrace>
                            <failIfNoTests>true</failIfNoTests>
                            <verbose>true</verbose>
                            <argLine>${failsafe.argLine}</argLine>
                            <includes>
                                <include>**/*ITest.java</include>
                                <include>**/*PTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>manual</id>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <includes>
                            <include>manual.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>fish.payara.test.containers.ManualTesting</mainClass>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
