<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.server.internal.tests</groupId>
        <artifactId>payara-tests</artifactId>
        <version>5.194-SNAPSHOT</version>
    </parent>
    <artifactId>test-containers</artifactId>
    <name>Payara Test Containers Suite</name>
    <packaging>jar</packaging>

    <properties>
        <docker.images.timeoutInSeconds>600</docker.images.timeoutInSeconds>
        <docker.payara.directory>${project.build.directory}/payara5</docker.payara.directory>
<!--         <docker.payara.image.base>ubuntu:19.04</docker.payara.image.base> -->
        <docker.payara.image.base>debian:9.11-slim</docker.payara.image.base>
        <docker.payara.image.forceNew>false</docker.payara.image.forceNew>
        <docker.payara.jvm.xms>256m</docker.payara.jvm.xms>
        <docker.payara.jvm.xmx>1g</docker.payara.jvm.xmx>
        <docker.payara.jvm.xss>228k</docker.payara.jvm.xss>
        <docker.payara.memory.totalInGB>2</docker.payara.memory.totalInGB>
        <docker.payara.port.admin>4848</docker.payara.port.admin>
        <docker.payara.port.http>8080</docker.payara.port.http>
        <docker.payara.host>payara-test-docker</docker.payara.host>
        <docker.payara.version>${project.version}</docker.payara.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.28</version>
            <scope>test</scope>
        </dependency>
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.28</version>
            <scope>test</scope>
        </dependency>
       <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.28</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>[1.12.1]</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jettison</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <version>3.1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.distributions</groupId>
            <artifactId>payara</artifactId>
            <version>${docker.payara.version}</version>
            <type>glassfish-distribution</type>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>manual.properties</include>
                    <include>test.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>log4j.properties</include>
                    <include>server-side/**</include>
                </includes>
                <filtering>false</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <includeArtifactIds>payara</includeArtifactIds>
                            <includeTypes>glassfish-distribution</includeTypes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>manual</id>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <includes>
                            <include>manual.properties</include>
                        </includes>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>fish.payara.test.containers.ManualTesting</mainClass>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
