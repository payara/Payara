<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright Payara Services Limited -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.server.internal.tests</groupId>
        <artifactId>payara-tests</artifactId>
        <version>5.201-SNAPSHOT</version>
    </parent>

    <groupId>fish.payara.samples</groupId>
    <artifactId>payara-samples</artifactId>
    <packaging>pom</packaging>

    <name>Payara Samples - root</name>

    <properties>
        <java.min.version>1.8</java.min.version>
        <maven.min.version>3.5</maven.min.version>

        <arquillian.payara.micro.version>2.0</arquillian.payara.micro.version>
        <arquillian.payara.remote.version>2.0</arquillian.payara.remote.version>
        <payara.version>${project.version}</payara.version>
        <payara.domain.name>domain1</payara.domain.name>

        <micro.isActive>false</micro.isActive>
    </properties>

    <modules>
        <module>test-utils</module>
        <module>samples</module>
        <module>samples-programmatic</module>
        <module>classpath</module>
    </modules>

    <repositories>
        <!-- omnifaces jacc-provider is not in any other repository -->
        <repository>
            <id>payara-eclipse</id>
            <name>Payara Eclipse</name>
            <url>https://raw.github.com/payara/Payara_PatchedProjects/eclipse</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.5.0.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.omnifaces</groupId>
                <artifactId>jacc-provider</artifactId>
                <version>0.3</version>
            </dependency>
            <!-- JSON Web Token implementation -->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>7.1</version>
            </dependency>
            <!-- Used to automatically configure microprofile rest client in tests -->
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-config</artifactId>
                <version>1.3.7</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.server.internal.admin</groupId>
                <artifactId>config-api</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.common</groupId>
                <artifactId>internal-api</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.common</groupId>
                <artifactId>simple-glassfish-api</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.extras</groupId>
                <artifactId>payara-micro-boot</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.payara-modules</groupId>
                <artifactId>hazelcast-bootstrap</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.payara-modules</groupId>
                <artifactId>healthcheck-core</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.payara-modules</groupId>
                <artifactId>healthcheck-stuck</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.server.internal.security</groupId>
                <artifactId>security</artifactId>
                <version>${payara.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>net.sourceforge.htmlunit</groupId>
                <artifactId>htmlunit</artifactId>
                <version>2.35.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.9.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.omnifaces</groupId>
                <artifactId>omniutils</artifactId>
                <version>0.11</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.valid4j</groupId>
                <artifactId>http-matchers</artifactId>
                <version>1.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <message>At least Maven in version ${maven.min.version} is required.</message>
                            <version>${maven.min.version}</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <message>At least a JDK in version ${java.min.version} is required.</message>
                            <version>${java.min.version}</version>
                        </requireJavaVersion>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.min.version}</source>
                        <target>${java.min.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <isUsingMicroProfile>${micro.isActive}</isUsingMicroProfile>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <configuration>
                        <!-- don't run tests in parallel -->
                        <forkCount>1</forkCount>
                        <reuseForks>true</reuseForks>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.3</version>
                    <configuration>
                        <attachClasses>true</attachClasses>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <linkXRef>true</linkXRef>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>
