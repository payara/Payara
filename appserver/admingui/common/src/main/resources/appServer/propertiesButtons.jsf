<!--

     Copyright (c) 2018 Payara Foundation and/or its affiliates. All rights reserved.

     The contents of this file are subject to the terms of either the GNU
     General Public License Version 2 only ("GPL") or the Common Development
     and Distribution License("CDDL") (collectively, the "License").  You
     may not use this file except in compliance with the License.  You can
     obtain a copy of the License at
     https://github.com/payara/Payara/blob/master/LICENSE.txt
     See the License for the specific
     language governing permissions and limitations under the License.

     When distributing the software, include this License Header Notice in each
     file and include the License file at glassfish/legal/LICENSE.txt.

     GPL Classpath Exception:
     The Payara Foundation designates this particular file as subject to the "Classpath"
     exception as provided by the Payara Foundation in the GPL Version 2 section of the License
     file that accompanied this code.

     Modifications:
     If applicable, add the following below the License Header, with the fields
     enclosed by brackets [] replaced by your own identifying information:
     "Portions Copyright [year] [name of copyright owner]"

     Contributor(s):
     If you wish your version of this file to be governed by only the CDDL or
     only the GPL Version 2, indicate your decision by adding "[Contributor]
     elects to include this software in this distribution under the [CDDL or GPL
     Version 2] license."  If you don't indicate a single choice of license, a
     recipient has the option to distribute your version of this file under
     either the CDDL, the GPL Version 2 or to extend the choice of license to
     its licensees as provided above.  However, if you add GPL Version 2 code
     and therefore, elected the GPL Version 2 license, then the option applies
     only if the new code is made subject to such option by the copyright
     holder.

-->

<!facet pageButtonsTop>
    <sun:panelGroup id="topButtons">
        <sun:button id="saveButton" rendered="#{edit}" text="$resource{i18n.button.Save}"
                onClick="if (guiValidate('#{reqMsg}','#{reqInt}','#{reqPort}')) {submitAndDisable(this, '$resource{i18n.button.Processing}');}; return false;" >
            <!command
                removeEmptyProps(props="#{pageSession.tableList}" modifiedProps="#{pageSession.tableList}");
                if (#{pageSession.isMicroProfileProps}=true) {
                    py.convertToMicroProfileProperties(props="#{pageSession.tableList}" convertedProps="#{pageSession.tableList}");
                    py.mergeConfigProperties(newProps="#{pageSession.tableList}" currentPros="#{pageSession.modifiedProps}" 
                                             oldProps="#{pageSession.properties}" modifiedProps="#{pageSession.finalProps}");
                }
                
                if (#{pageSession.isMicroProfileProps}=false) {
                     py.mergeMicroProfileProperties(newProps="#{pageSession.tableList}" oldProps="#{pageSession.properties}" modifiedProps="#{pageSession.finalProps}");
                }
               
                javaToJSON(obj="#{pageSession.finalProps}" json="#{requestScope.tmpJSON}");
                gf.restRequest(endpoint="#{pageSession.selfUrl}/property.json", method="POST", data="#{requestScope.tmpJSON}", result="#{requestScope.restResponse}");

                prepareSuccessfulMsg();
                gf.redirect(page="#{pageSession.selfPage}&alertType=${alertType}&alertSummary=${alertSummary}&alertDetail=${alertDetail}");
            />
        </sun:button>

        <sun:button id="cancelButton" immediate="#{true}" primary="#{false}" rendered="#{pageSession.showCancelButton}" text="$resource{i18n.button.Cancel}" >
            <!command
                gf.redirect(page="#{parentPage}");
            />
        </sun:button>
    </sun:panelGroup>
</facet>