#     DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
#     Copyright (c) [2018-2019] Payara Foundation and/or its affiliates. All rights reserved.
#
#     The contents of this file are subject to the terms of either the GNU
#     General Public License Version 2 only ("GPL") or the Common Development
#     and Distribution License("CDDL") (collectively, the "License").  You
#     may not use this file except in compliance with the License.  You can
#     obtain a copy of the License at
#     https://github.com/payara/Payara/blob/master/LICENSE.txt
#     See the License for the specific
#     language governing permissions and limitations under the License.
#
#     When distributing the software, include this License Header Notice in each
#     file and include the License file at glassfish/legal/LICENSE.txt.
#
#     GPL Classpath Exception:
#     The Payara Foundation designates this particular file as subject to the "Classpath"
#     exception as provided by the Payara Foundation in the GPL Version 2 section of the License
#     file that accompanied this code.
#
#     Modifications:
#     If applicable, add the following below the License Header, with the fields
#     enclosed by brackets [] replaced by your own identifying information:
#     "Portions Copyright [year] [name of copyright owner]"
#
#     Contributor(s):
#     If you wish your version of this file to be governed by only the CDDL or
#     only the GPL Version 2, indicate your decision by adding "[Contributor]
#     elects to include this software in this distribution under the [CDDL or GPL
#     Version 2] license."  If you don't indicate a single choice of license, a
#     recipient has the option to distribute your version of this file under
#     either the CDDL, the GPL Version 2 or to extend the choice of license to
#     its licensees as provided above.  However, if you add GPL Version 2 code
#     and therefore, elected the GPL Version 2 license, then the option applies
#     only if the new code is made subject to such option by the copyright
#     holder.
tree.microprofile=MicroProfile
microprofile.configuration.tabSetTitle=MicroProfile Configuration
microprofile.configuration.tabSetTitleToolTip=Configures the MicroProfile.
microprofile.configuration.configTab=Config
microprofile.configuration.faultToleranceTab=Fault Tolerance
microprofile.configuration.healthCheckTab=Health Check
microprofile.configuration.metricsTab=Metrics
microprofile.configuration.openAPITab=OpenAPI
microprofile.configuration.openTracingTab=OpenTracing

microprofile.configuration.configOrdinalTab=Ordinal
microprofile.configuration.configPropertyTab=Property
microprofile.configuration.configSecretsDirectoryTab=Directory

microprofile.specs.configuration.config.pageTitle=Config API
microprofile.specs.configuration.config.pageTitleHelpText=Configuration options for the MicroProfile Config API.
microprofile.specs.configuration.faultTolerance.pageTitle=Fault Tolerance API
microprofile.specs.configuration.faultTolerance.pageTitleHelpText=Configuration options for the MicroProfile Fault Tolerance API.
microprofile.specs.configuration.healthCheck.pageTitle=Health Check API
microprofile.specs.configuration.healthCheck.pageTitleHelpText=Configuration options for the MicroProfile Health Check API.
microprofile.specs.configuration.metrics.pageTitle=Metrics API
microprofile.specs.configuration.metrics.pageTitleHelpText=Configuration options for the MicroProfile Metrics API.
microprofile.specs.configuration.openAPI.pageTitle=OpenAPI API
microprofile.specs.configuration.openAPI.pageTitleHelpText=Configuration option for the MicroProfile OpenAPI API. OpenAPI document will be published at the endpoint <code>/openapi</code>.
microprofile.specs.configuration.openTracing.pageTitle=OpenTracing API
microprofile.specs.configuration.openTracing.pageTitleHelpText=OpenTracing is integrated into the Request Tracing Service. You can find configuration options for the Request Tarcing Service <a href="#{request.contextPath}/payaraExtras/requestTracing/requestTracing.jsf?configName=#{pageSession.configName}">here</a>.

faultTolerance.configuration.asyncExecutorPoolMaxSize=Asynchronous Maximum Pool Size
faultTolerance.configuration.asyncExecutorPoolMaxSizeHelp=The maximum size of the executor thread pool executing asynchronous methods.
faultTolerance.configuration.delayExecutorMaxPoolSize=Delay Maximum Pool Size
faultTolerance.configuration.delayExecutorMaxPoolSizeHelp=The maximum size of the executor thread pool scheduling delays and timeouts.

healthCheck.configuration.enabled=Enabled
healthCheck.configuration.enabledHelp=Enables or Disables the Health Check.
healthCheck.configuration.securityEnabled=Enable Secure Access
healthCheck.configuration.securityEnabledHelp=If checked, <code>/health</code> endpoint can be accessed only via HTTPS and disables the HTTP method with 403 HTTP response. And you will be required to log in before accessing the Health Check endpoint.
healthCheck.configuration.roles=Roles:
healthCheck.configuration.rolesHelp=Separate multiple roles with comma
healthCheck.configuration.endpoint=EndPoint
healthCheck.configuration.endpointHelp=The context root used to expose the health checks.
healthCheck.configuration.virtualServers=Virtual Servers:
healthCheck.configuration.virtualServersHelp=Associates an Internet domain name with a physical server.

metrics.configuration.enabled=Enabled
metrics.configuration.enabledHelp=Enables or Disables the Metrics.
metrics.configuration.securityEnabled=Enable Secure Access
metrics.configuration.securityEnabledHelp=If checked, <code>/metrics</code> endpoint can be accessed only via HTTPS and disables the HTTP method with 403 HTTP response. And you will be required to log in before accessing the Metrics endpoint.
metrics.configuration.roles=Roles:
metrics.configuration.rolesHelp=Separate multiple roles with comma
metrics.configuration.dynamic=Dynamic
metrics.configuration.dynamicHelp=If set to true, applies the changes instantly without a restart. Otherwise a restart is required.
metrics.configuration.endpoint=EndPoint
metrics.configuration.endpointHelp=The context root used to expose the metrics.
metrics.configuration.virtualServers=Virtual Servers:
metrics.configuration.virtualServersHelp=Associates an Internet domain name with a physical server.

openAPI.configuration.enabled=Enabled
openAPI.configuration.enabledHelp=Enables or Disables the OpenAPI.
openAPI.configuration.securityEnabled=Enable Secure Access
openAPI.configuration.securityEnabledHelp=If checked, <code>/openapi</code> endpoint can be accessed only via HTTPS and disables the HTTP method with 403 HTTP response. And you will be required to log in before accessing the OpenAPI endpoint.
openAPI.configuration.roles=Roles:
openAPI.configuration.rolesHelp=Separate multiple roles with comma
openAPI.configuration.virtualServers=Virtual Servers:
openAPI.configuration.virtualServersHelp=Associates an Internet domain name with a physical server.

microprofile.specs.configuration.config.ordinal.pageTitle=Ordinal
microprofile.specs.configuration.config.ordinal.pageTitleHelpText=Configuration options to set the ordinal for a given config source. Value of a ordinal must be a number greater than 1. A lower number means lower order of precedence.
microprofile.specs.configuration.config.property.pageTitle=Property
microprofile.specs.configuration.config.property.pageTitleHelpText=Configuration options to set the given property name and value in one of the built-in config sources.
microprofile.specs.configuration.config.secretsDirectory.pageTitle=Secrets Directory
microprofile.specs.configuration.config.secretsDirectory.pageTitleHelpText=Sets the directory to be used for the directory config source.

config.ordinal.configuration.application=Application
config.ordinal.configuration.cluster=Cluster
config.ordinal.configuration.config=Config
config.ordinal.configuration.domain=Domain
config.ordinal.configuration.jndi=JNDI
config.ordinal.configuration.module=Module
config.ordinal.configuration.password=Password
config.ordinal.configuration.secretDirectory=Secret Directory
config.ordinal.configuration.server=Server

config.property.configuration.source=Source
config.property.configuration.sourceHelp=The ConfigSource where the property is to be stored.
config.property.configuration.sourceName=Source Name
config.property.configuration.sourceNameHelp=The name of the ConfigSource when there may be ambiguity, for example a ConfigSource of type application must specify the name of the application.
config.property.configuration.moduleName=Module Name
config.property.configuration.moduleNameHelp=The name of the module when the ConfigSource is of type module. When this is specified, the sourceName parameter must be provided and must have the name of the application where the module is deployed.

config.secretsDirectory.configuration.directory=Directory
config.secretsDirectory.configuration.directoryHelp=Full path to the directory containing configuration files.
