<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.extras</groupId>
        <artifactId>extras</artifactId>
        <version>5.202-SNAPSHOT</version>
    </parent>
    <artifactId>docker-images</artifactId>
    <packaging>pom</packaging>
    <name>Payara Docker Images</name>

    <modules>
        <module>server-full</module>
        <module>server-node</module>
        <module>tests</module>
    </modules>

    <properties>
        <payara.version>${project.version}</payara.version>
        <dockerBaseDir>${project.build.directory}/docker-work-dir</dockerBaseDir>
        <dockerRepositoryName>payara/${project.artifactId}</dockerRepositoryName>
        <!-- use false for faster testing, but you depend on cached results then -->
        <docker.noCache>true</docker.noCache>
        <dockerfile.tag>${payara.version}</dockerfile.tag>
        <docker.basicJdkImage>azul/zulu-openjdk:8u232</docker.basicJdkImage>
        <docker.payara.domainName>production</docker.payara.domainName>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.33.0</version>
                    <extensions>true</extensions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>generate-docker-images-only-if-dockerfile-exists</id>
            <activation>
                <file>
                    <exists>src/main/docker/Dockerfile</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>${dockerRepositoryName}</name>

                                    <build>
                                        <!-- On Windows with default setting ${*}, $PATH would get filtered as well -->
                                        <filter>@</filter>
                                        <tags>
                                            <tag>${dockerfile.tag}</tag>
                                        </tags>
                                        <noCache>${docker.noCache}</noCache>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <assembly>
                                            <mode>tar</mode>
                                            <descriptor>assembly.xml</descriptor>
                                        </assembly>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
