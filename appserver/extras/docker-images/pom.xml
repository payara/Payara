<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.extras</groupId>
        <artifactId>extras</artifactId>
        <version>5.202-SNAPSHOT</version>
    </parent>
    <artifactId>docker-images</artifactId>
    <packaging>pom</packaging>
    <name>Payara Docker Images</name>

    <modules>
        <module>server-full</module>
        <module>server-node</module>
    </modules>

    <properties>
        <payara.version>${project.version}</payara.version>
        <dockerBaseDir>${project.build.directory}/docker-work-dir</dockerBaseDir>
        <dockerRepositoryName>payara/${project.artifactId}</dockerRepositoryName>
        <dockerUnpackedPayara>payara-unpacked</dockerUnpackedPayara>
        <!-- use false for faster testing, but you depend on cached results then -->
        <dockerfile.build.noCache>true</dockerfile.build.noCache>
        <dockerfile.tag>${payara.version}</dockerfile.tag>
        <docker.basicJdkImage>azul/zulu-openjdk:8u232</docker.basicJdkImage>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>unpack-payara-zip-for-docker-images</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>unpack-dependencies</goal>
                            </goals>
                            <inherited>true</inherited>
                            <configuration>
                                <outputDirectory>${dockerBaseDir}/${dockerUnpackedPayara}</outputDirectory>
                                <includeScope>compile</includeScope>
                                <includeGroupIds>fish.payara.distributions</includeGroupIds>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-docker-resources</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <inherited>true</inherited>
                            <configuration>
                                <outputDirectory>${dockerBaseDir}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/docker</directory>
                                        <!-- docker uses only uppercase names, so it can be used -->
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <configuration>
                        <buildArgs>
                            <PAYARA_UNPACKED>${dockerUnpackedPayara}</PAYARA_UNPACKED>
                            <ADDITIONAL_SCRIPTS>bin</ADDITIONAL_SCRIPTS>
                        </buildArgs>
                        <contextDirectory>${dockerBaseDir}</contextDirectory>
                        <connectTimeoutMillis>10000</connectTimeoutMillis>
                        <readTimeoutMillis>900000</readTimeoutMillis>
                        <retryCount>0</retryCount>
                        <skipDockerInfo>true</skipDockerInfo>
                        <verbose>true</verbose>
                        <repository>${dockerRepositoryName}</repository>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-docker-image</id>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>generate-docker-images-only-if-dockerfile-exists</id>
            <activation>
                <file>
                    <exists>src/main/docker/Dockerfile</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-payara-zip-for-docker-images</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-docker-resources</id>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>build-docker-image</id>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
