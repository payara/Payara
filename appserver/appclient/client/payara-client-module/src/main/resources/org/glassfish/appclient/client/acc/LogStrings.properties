#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2004-2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#
# Log messages used by the javax.enterprise.system.container.application logger
# LogDomains.ACC_LOGGER, subsystem ACC.
# See java.text.MessageFormat for details on constructing messages.
# Messages in this file must be of the form
# <Subsystem><4CharIntegerMessageId>:<message text>
#
appclient.singleNestedClientNoMatch=ACC001: Using the only client {1} with main class {2} in {0} even though it does not match the specified main class name {3} or client name {4}
ACC001.diag.cause.1=The command line specified a main class or a client name different from the main class and name of the only client found.
ACC001.diag.check.1=The error message lists the main classes and client names for the clients in the JAR.  Make sure the command line specifies one of those.

appclient.multClientsNoChoice=ACC002: The application contains multiple app clients; please choose one using -mainclass {0} or -name {1}
ACC002.diag.cause.1=The command line did not specify a main class or a client name to run, and the JAR contains more than one client.
ACC002.diag.check.1=Specify either -mainclass your-main-class-name or -name your-client-name on the appclient command.

appclient.noMatchingClientInGroup=ACC003: No app client in the app client group {0} matches the main class name "{1}" or the app client name "{2}";\nPlease choose one using -mainclass {3} or -name {4}
ACC003.diag.cause.1=The JAR file contains multiple app clients and none matches the -mainclass value or the -name value that was specified on the appclient command.
ACC003.diag.check.1=Review the list of main classes and names in the original error message and make sure the appclient command specifies a main class or a name listed.

appclient.noClientsInGroup=ACC004: No app clients are listed in the app client group {0}
ACC004.diag.cause.1=The deployment which generated the downloaded JAR file might have failed partially.
ACC004.diag.check.1=Check the server.log file on the server for any deployment errors.

appclient.notPublicOrNotStatic=ACC005: The main method is either not public or not static
ACC005.diag.cause.1=The main method for the app client is not declared as "public."
ACC005.diag.check.1=Declare the main method as "public."
ACC005.diag.cause.2=The main method for the app client is not declared as "static."
ACC005.diag.check.2=Declare the main method as "static."

appclient.notVoid=ACC006: The main method's return type is not void
ACC006.diag.cause.1=The main method does not have a return type of "void."
ACC006.diag.check.1=Declare the main method so its return type is "void."

appclient.noMFInFacade=ACC007: The app client {0,choice,0#file|1#directory} {1} does not contain a manifest; the app client container cannot process it.  Embedded programs should pass URIs with scheme "jar:" for JAR files and scheme "file:" for directories.
ACC007.diag.cause.1=The file might not be a valid app client JAR or undeployed EAR.  It might be another kind of file or have become corrupted.
ACC007.diag.check.1=Make sure to specify a valid app client JAR file or an EAR which contains at least one app client.

appclient.MFMissingEntry=ACC008: The manifest in the app client facade {0} does not contain the expected entry for {1} or it is invalid; the app client container cannot process it.
ACC008.diag.cause.1=The app client facade JAR file might have generated incorrectly.
ACC008.diag.cause.2=The app client facade JAR file might have become corrupted.
ACC008.diag.check.1=Check the server's server.log file for any errors during deployment of the application.
ACC008.diag.check.2=Use the get-client-stubs command to retrieve the generated JAR files for the application again.

# the following message is used as a user-correctable error message to be displayed all at once (with the likely causes and remedies built in) to avoid the need for normal users to consult the log viewer or other documentation.
#
appclient.RemoteAuthError=ACC009: \nThe credentials you provided (username and password) were not valid or do not\nallow access to the application.  Please try again with a valid username and \npassword.  If you are certain the username and password are correct please\ncontact your system administrator.  The following information might be helpful:\n\n{0}
ACC009.diag.cause.1=The user supplied a username and password combination that are not valid.
ACC009.diag.cause.2=The user supplied a valid username and password but they are not authorized for access to the server-side resource requested.
ACC009.diag.check.1=Make sure the username and password are correct.
ACC009.diag.check.2=Make sure the username and password grant the desired access to the requested server-side resource.

appclient.userCanceledAuth=ACC010: The user cancelled authentication.

appclient.missingClient=ACC011: The expected client file {0} is missing.  The deployment of the application or retrieval of the app client might have failed.
ACC011.diag.cause.1=The manifest of the generated facade JAR file refers to the specified app client JAR file but that file does not seem to exist.
ACC011.diag.check.1=Make sure the deployment of the application succeeded and that the download of the app client files (using either "deploy --retrieve" or "get-client-stubs" succeeded.

appclient.nullLogger=ACC012: In modifying known loggers, the LogManager reported the logger name {0} which does not have a corresponding logger; continuing
ACC012.diag.cause.1=Somehow a logger name is registered with the LogManager with no corresponding logger.
ACC012.diag.check.1=Possibly the logging.properties file contains settings which cause this condition.

appclient.password.deprecated=ACC013: The -password option is deprecated and will likely be removed in a future release.  Please use -passwordfile or let the app client container prompt for the username and/or password if they are needed to access a remote resource.
ACC013.diag.cause.1=Specifying the password on the command line exposes the password too easily and is a security risk.
ACC013.diag.check.1=Consider using the -passwordfile option instead, or allow the app client container to prompt for the username and/or password when access to a protected resource is requested.

appclient.foundMainClassDiffFromManifest=ACC014: Launching client {1} with main class {2} in {0} although the client manifest specifies the Main-Class as {3}
ACC014.diag.cause.1=The specified main class name exists in the app client but is different from the Main-Class setting in the app client itself.
ACC014.diag.check.1=Make sure you really want to launch the app client using a main class other than the one configured in the application