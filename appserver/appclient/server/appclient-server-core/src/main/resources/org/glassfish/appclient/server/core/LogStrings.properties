#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2011 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

enterprise.deployment.appclient.dirURLnoSlash=ACDEPL001: Directory URL {0} in the manifest Class-Path for {1} will not be honored; it does not end with a slash.
ACDEPL001.diag.cause.1=Default class loaders will not include files from this directory at runtime; also, as a result, these files be not downloaded to clients.
ACDEPL001.diag.check.1=Please make sure all such directory URLs in the Class-Path entry of JAR manifests have a trailing slash.

enterprise.deployment.appclient.noManifest=ACDEPL002: Cannot process archive {0} as an application client; it does not contain the required manfest at META-INF/MANIFEST.MF
ACDEPL002.diag.cause.1=All legal JARs, including Java EE components such as app clients, are required to have a manifest.
ACDEPL002.diag.check.1=Make sure all JARs, specifically the one logged in the message, include valid manifests.

enterprise.deployment.appclient.noMainAttrs=ACDEPL003: Cannot process archive {0} as an application client; its manifest does not contain main attributes (such as "Main-Class")
ACDEPL003.diag.cause.1=An app client JAR must specify the main class using the Main-Class setting in the manifest
ACDEPL003.diag.check.1=Make sure the manifest of each app client JAR specifies the Main-Class

# Java Web Start related messages
enterprise.deployment.appclient.jws.noStart.ineligible=ACDEPL101: Java Web Start services not started for the app client {0}; its developer has marked it as ineligible
ACDEPL101.diag.cause.1=The developer's sun-application-client.xml file marks the app client as ineligible for Java Web Start support.
ACDEPL101.diag.check.1=If users should be able to launch this client using Java Web Start, change the <java-web-start-support> 'enabled' attribute.

enterprise.deployment.appclient.jws.noStart.disabled=ACDEPL102: Java Web Start services not started for the app client {0}; the administrator has disabled Java Web Start support for it
ACDEPL102.diag.cause.1=The administrator disabled Java Web Start launches for the app client, either using '--properties java-web-start-enabled=false' during deployment or changing the properties afterwards.
ACDEPL102.diag.check.1=If users should be able to launch this client using Java Web Start, either deploy the application again without --properties or adjust the configuration using the admin console or the asadmin 'set' command

enterprise.deployment.appclient.jws.started=ACDEPL103: Java Web Start services started for the app client {0} (contextRoot: {1})
enterprise.deployment.appclient.jws.stopped=ACDEPL104: Java Web Start services stopped for the app client {0}

enterprise.deployment.appclient.jws.errStartSystemAdapter=ACDEPL105: Error starting the adapter to serve static system-level content
ACDEPL105.diag.cause.1=An unexpected internal system error occurred
ACDEPL105.diag.check.1=Please consult the exception stack trace

enterprise.deployment.appclient.jws.staticContentCollision=ACDEPL106: Attempt to replace existing static content for {0} with {1} which does not match the existing content {2}
ACDEPL106.diag.cause.1=This is an internal error.
ACDEPL106.diag.check.1=Please file an issue with a reproducible test case.

enterprise.deployment.appclient.jws.uriOutsideContextRoot=ACDEPL107: Attempt to add or retrieve content with URI {0} to HTTP adapter with context root {1} and user-friendly context root {2} rejected; URIs must fall within the adapter context root
ACDEPL107.diag.cause.1=This is an internal error.
ACDEPL107.diag.check.1=Please file an error with a reproducible test case.

enterprise.deployment.appclient.jws.clientJNLPConfigFileMissing=ACDEPL108: Config file for client JNLP not found: {0}
ACDEPL108.diag.cause.1=The config file does not exist.
ACDEPL108.diag.check.1=The file is part of the installation so this might be an internal error.  Make sure you have not accidentally removed or renamed the config file.  If not, please file an error with a reproducible test case.

enterprise.deployment.appclient.jws.clientJNLPConfigFileUnreadable=ACDEPL109: The config file for client JNLP {0} exists but could not be read.
ACDEPL109.diag.cause.1=The config file might be protected from reading.
ACDEPL109.diag.check.1=Make sure the config file protection settings permit the server to read it.

enterprise.deployment.appclient.jws.clientJNLPConfigProcError=ACDEPL110: Error processing client JNLP config file {0}
ACDEPL110.diag.cause.1=An error occurred attempting to process the config file's contents.
ACDEPL110.diag.check.1=The contents of the file might be invalid or incorrectly formatted.  Check to make sure the file includes valid property settings.

enterprise.deployment.appclient.jws.clientJNLPBadStaticContent=ACDEPL111: Client JNLP document {0} refers to the static resource {1} that does not exist or is not readable.
ACDEPL111.diag.cause.1=The developer-provided JNLP content refers to a file as if the file is in the application but the server could not find the file.
ACDEPL111.diag.check.1=Make sure the file is packaged in the application and that the reference to the file is correct.  Then rebuild and redeploy the application.

enterprise.deployment.appclient.jws.extension.error=ACDEPL112: The following extensions or libraries are referenced from the manifest of {0} but were not found where indicated: {1}; ignoring and continuing
ACDEPL112.diag.cause.1=The server could not open the JAR file(s) or process the extension(s) listed in its manifest.
ACDEPL112.diag.check.1=Make sure the manifest of the JAR file correctly lists the relative paths of library JARs and the extensions on which the JAR depends.

enterprise.deployment.appclient.jws.nomf=ACDEPL113: Error preparing to server JARs referenced by app client; referenced JAR file {0} contains no manifest; continuing
ACDEPL113.diag.cause.1=A JAR file which an app client directory or indirectly refers to contains no manifest, in violation of the JAR specification, so it cannot be checked for further dependencies.
ACDEPL113.diag.check.1=Check that the referenced JAR file has been built correctly. It should contain a manifest but does not.

enterprise.deployment.appclient.jws.clientJNLPConfigLoad=Loading client JNLP configuration using config file {0}
enterprise.deployment.appclient.jws.clientJNLPConfigChangeFile=Changing file for client JNLP configuration; now using {0}

enterprise.deployment.appclient.jws.signedJARMgrNull=ACDEPL114: The ApplicationSignedJARManager for a nested app client deployer helper is unexpectedly null.
ACDEPL114.diag.cause.1=During deployment of nested app clients (those inside EARs), the system should use an ApplicationSignedJARManager but it is null.
ACDEPL114.diag.check.1=This is a system error.  Please report this as a bug.

enterprise.deployment.appclient.jws.userReferencedJARFromStandAloneAppClient=ACDEPL115: Tbe custom JNLP document {0} in a stand-alone app client incorrectly refers to a JAR {1}
ACDEPL115.diag.cause.1=The app client includes a custom JNLP document which refers to a JAR.  Stand-alone app clients cannot refer to other JARs because they are self-contained deployment units.
ACDEPL115.diag.check.1=Remove references to JAR from the custom JNLP document or package the app client inside an EAR that also contains the referenced JAR.

enterprise.deployment.appclient.jws.depJarNoMainAttrs=ACDEPL116: The manifest in dependent JAR {0} contains no main attributes, such as Class-Path, and so is an invalid JAR.  Continuing.
ACDEPL116.diag.cause.1=The JAR specification requires JARs to have a main attributes section, which this JAR does not have.
ACDEPL116.diag.check.1=Make sure the JAR was created correctly with a main attributes section and has not been corrupted.

enterprise.deployment.appclient.errormkdirs=ACDEPL117: Could not create the directory {0} (or its ancestors) to hold the generated AppClientFacade
ACDEPL117.diag.cause.1=The directory did not already exist but it could not be created. 
ACDEPL117.diag.check.1=Make sure that GlassFish has permission to write to the directory, that the disk is not full, etc.  