#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2004-2013 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
# Portions Copyright [2016] [Payara Foundation]

example.message1=EJB0001:Test Message. Parameter 1={0} parameter 2={1}
example.message2=EJB0002:Date Message. Parameter 1={0,date} Parameter 2={1,time}
example.message3=EJB0003:Number Message. Parameter 1={0,number,integer}

java_security.security_context_exception=SEC5036: Exception in getting security context

ejb.resolve_object_exception=EJB5014: Exception resolving object
ejb.incomplete_sessionbean_txn_exception=EJB5021: Session bean transaction is incomplete : [{0}]
ejb.ejb_getstub_exception=EJB5058: Exception while getting ejb stub : [{0}]
ejb.stateless_ejbcreate_exception=EJB5070: Exception creating stateless session bean : [{0}]
ejb.remote_or_txnrollback_exception=EJB5071: Some remote or transactional roll back exception occurred
EJB5071.diag.cause.1=Some problem occurred during the beforeCompletionphase of the transaction lifecycle.  This error often happens when application code throws a system exception from its ejbStore method or if the transaction manager encounters a system exception.
EJB5071.diag.check.1=Check the stack trace to see if the exception originated from the application's ejbStore method.  Also check the resource configuration to ensure that all resource managers involved in the transaction are configured properly and healthy.
ejb.user_transaction_exception=EJB5096:Unable to lookup UserTransaction
ejb.transaction_abort_exception=EJB5101:Transaction Aborted
ejb.cmt_exception=EJB5102:Unable to complete container-managed transaction
ejb.illegal_ejb_interface_override=EJB5110:Attempt to override reserved ejb interface method [{0}] in [{1}]. Override will be ignored.
ejb.bean_class_method_not_found=EJB5111:Bean class for ejb [{0}] does not define a method corresponding to [{1}] interface method [{2}]
EJB5111.diag.cause.1=This error indicates a mismatch in the required method signature rules between a method defined on a [Home, Remote, LocalHome, Local] interface and the corresponding bean implementation class. E.g., this would happen if a create method in a Home interface did not have a matching ejbCreate method in the bean class.
EJB5111.diag.check.1=Run the verifier tool to check that the methods defined on the bean class are correct with respect to the exposed interface.
ejb.destroy_timer_error=EJB5115:Error destroying timer [{0}]
ejb.create_timer_failure=EJB5117:Timer creation failed for container [{0}] primary key [{1}] and info [{2}]
EJB5117.diag.cause.1=Error while creating the persistent representation of an ejb timer.  This typically means there is some configuration error or runtime problem with the ejb timer service data source.
EJB5117.diag.check.1=Double-check the JDBC data source (and its associated connection pool) assigned to the timer-datasource element in domain.xml.  Common causes are that the database is not running, the timer table has not been created within that database, or that the connection pool's JDBC driver URL information is incorrect.
ejb.timer_exceeded_max_deliveries=EJB5119:Expunging timer [{0}] after [{1}] failed deliveries
ejb.timer_service_shutdown_msg=EJB5122:EJB Timer Service shutdown at [{0}]
ejb.tx_timeout=EJB5123:Rolling back timed out transaction [{0}] for [{1}]
ejb.after_completion_error=EJB5129:Error in ContainerSynchronization::afterCompletion
EJB5129.diag.cause.1=An error occurred during the afterCompletion phase of the transaction lifecycle.
EJB5129.diag.check.1=Check stack trace for details of error encountered by ejb container
ejb.timer_reschedule_after_max_deliveries=EJB5169:Rescheduling timer [{0}] after [{1}] redeliveries
ejb.base.io.EJBOutputStream.null_container=EJB5186:No container found for container id: [{0}]

# Embedded EJB container - message IDs should start with EJB6001
ejb.embedded.exception_instantiating=EJB6001:Caught exception instantiating EmbeddedContainer.
ejb.embedded.io_exception=EJB6002:Caught IOException parsing classpath entries.
ejb.embedded.cannot_create_context=EJB6003:Caught exception instantiating InitialContext.
ejb.embedded.installation_location_not_exists=EJB6004:Specified or calculated application server installation [{0}] does not exist.
ejb.embedded.no_modules_found=EJB6005:No EJB modules found
EJB6005.diag.cause.1=No EJB modules had been found on the classpath or specified via MODULE property.
EJB6005.diag.check.1=Check the classpath and the value(s) of the MODULE property.
ejb.embedded.cannot_determine_installation_location=EJB6006:Cannot determine server installation location
EJB6006.diag.cause.1=Installation location is not specified, and cannot be determined relative to the implementation location.
EJB6006.diag.check.1=Check the classpath or specify server installation location using the org.glassfish.ejb.embedded.glassfish.installation.root property
ejb.embedded.tmp_file_create_error=EJB6007:Temporary file could not be created: {0}
EJB6007.diag.cause.1=See output for details.
EJB6007.diag.check.1=See detailed exception at FINE log level.
ejb.embedded.instance_location_not_exists=EJB6008:Specified or calculated application server instance [{0}] does not exist.
ejb.embedded.configuration_file_location_not_exists=EJB6009:Specified or calculated application server configuration file [{0}] does not exist.

# These messages are used only from ejb-full-container, but with the usage of ours path. Must be visible from there!
ejb.timer_service_init_error=EJB5108:Unable to initialize EJB Timer Service. The possible cause is the timer resource is not configured correctly, the database has not been started, or the timer database table has not been created.
ejb.timer_service_started=EJB5109:EJB Timer Service started successfully for data source [{0}]
ejb.cancel_entity_timer=EJB5112:Error cancelling timer with pkey [{0}]
ejb.cancel_entity_timers=EJB5113:Error cancelling timers for container [{0}] and pkey [{1}]
ejb.destroy_timers_error=EJB5114:Error destroying timers for container [{0}]
ejb.remove_timer_failure=EJB5118:Failure removing timer bean [{0}]

# Cache statistics - used in common-utils, must be visible from there!
cache.BaseCache.stat_maxEntries=UTIL8060: Maximum number of entries
cache.BaseCache.stat_threshold=UTIL8061: Threshold
cache.BaseCache.stat_tableSize=UTIL8062: Table size
cache.BaseCache.stat_entryCount=UTIL8063: Number of entries
cache.BaseCache.stat_hitCount=UTIL8064: Hit count
cache.BaseCache.stat_missCount=UTIL8065: Miss count
cache.BaseCache.stat_removalCount=UTIL8066: Removal count
cache.BaseCache.stat_refreshCount=UTIL8067: Refresh count
cache.BaseCache.stat_addCount=UTIL8070: Add count
cache.BaseCache.stat_retrieveCount=UTIL8071: Retrieve count
cache.BaseCache.stat_overflowCount=UTIL8072: Overflow count
cache.LruCache.stat_lruListLength=UTIL8075: LRU list length
cache.LruCache.stat_trimCount=UTIL8076: LRU list trim count
cache.MultiLruCache.stat_segmentSize=UTIL8080: Multi-LRU segment size
cache.MultiLruCache.stat_segmentListLength=UTIL8081: Multi-LRU list size by segment
cache.MultiLruCache.stat_trimCount=UTIL8082: Multi-LRU list trim count
cache.BoundedMultiLruCache.stat_currentSize=UTIL8082: Current size (bytes)
cache.BoundedMultiLruCache.stat_maxSize=UTIL8083: Maximum size (bytes)

# Security log messages
ejb.security_preinvoke_exception=SECEJB9000: Exception while running pre-invoke
SECEJB9000.diag.cause.1=An error occurred during the call to preInvoke of the EjbSecurityComponentInvocationHandler
SECEJB9000.diag.check.1=Check the exception stack trace to see if the exception originated from EjbSecurityManager
ejb.security_postinvoke_exception=SECEJB9001: Exception while running postInvoke
SECEJB9001.diag.cause.1=An error occurred during the call to postInvoke of the EjbSecurityComponentInvocationHandler
SECEJB9001.diag.check.1=Check the exception stack trace to see if the exception originated from EjbSecurityManager
JACC_ejbsm.codesourceerror=SECEJB9002:Exception while getting the CodeSource
SECEJB9002.diag.cause.1=An error occurred during the call to get the Codesource in the EjbSecurityManager
SECEJB9002.diag.check.1=Check the exception stack trace to see if the URL provided for the codesource has valid syntax or is malformed
ejbsm.could_not_delete=SECEJB9003:Exception while destroying EjbSecurityManager
SECEJB9003.diag.cause.1=An error occurred during the call to destroy the EjbSecurityManager
SECEJB9003.diag.check.1=Check if the policy has been already removed or if the application was rightly registered
JACC_createurierror=SECEJB9004:EjbSecurityManager - Exception while getting the CodeSource
SECEJB9004.diag.cause.1=An error occurred during the call to obtain the codesource through the URI provided
SECEJB9004.diag.check.1=Check the exception stack trace to see if the URL provided for the codesource is correct
jaccfactory.notfound=SECEJB9005:EjbSecurityManager - Exception while getting the PolicyFactory
SECEJB9005.diag.cause.1=An error occurred during the call to obtain the PolicyConfigurationFactory
SECEJB9005.diag.check.1=Check the stack trace to see if the exception is ClassNotFound or a general PolicyContextException
jacc_access_exception=SECEJB9006:JACC: Unexpected security exception on access decision
SECEJB9006.diag.cause.1=An Authorization Exception was thrown for accessing the specific method on the EJB by the user
SECEJB9006.diag.check.1=Check the EJB policy to see if access is allowed for the user role specified
jacc_policy_context_exception=SECEJB9007:JACC: Unexpected exception manipulating policy context
SECEJB9007.diag.cause.1=An Exception was thrown while resetting the policycontext
SECEJB9007.diag.check.1=Check the EJB policy to see if the policy contexts of the application are correct
jacc_is_caller_in_role_exception=SECEJB9008:JACC: Unexpected security exception isCallerInRole
SECEJB9008.diag.cause.1=An Exception was thrown while checking if the caller of the EJB belongs to the role specified
SECEJB9008.diag.check.1=Check the EJB policy to see if the caller has been configured for the correct role
jacc_policy_context_security_exception=SECEJB9009:JACC: Unexpected PrivilegedActionException manipulating policy context
SECEJB9009.diag.cause.1=A PrivilegedActionException Exception was thrown while resetting the policy context
SECEJB9009.diag.check.1=Check to see if the caller has enough permissions for this operation
method_descriptor_not_defined=SECEJB9010:JACC: EJB Method Descriptor not defined for Ejb {0}, MethodName {1}, MethodParameters {2}
SECEJB9010.diag.cause.1=The Method Interface specified is either empty or null
SECEJB9010.diag.check.1=Check to see if the EJB name and the method interfaces are correct
