#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2004-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
# Portions Copyright [2016] [Payara Foundation]

containers.mdb.init_pool=MDB0001: Create message-driven bean pool with maximum pool size [{0}], bean idle timeout [{1}] seconds
containers.mdb.get_serversession_error=MDB0002: Could not get server session: [{0}]
containers.mdb.get_serversession_exception=MDB0003: Exception on getting server session
containers.mdb.get_session_inuse=MDB0004: Can not call getSession() while the session is still in use
containers.mdb.get_session_invalid=MDB0005: Can not call getSession() after the session has been destroyed
containers.mdb.get_session_error=MDB0006: Get session failed: [{0}]
containers.mdb.get_session_exception=MDB0007: Get session throws exception
containers.mdb.session_run_error=MDB0008: Session.run() throws Exception [{0}]
containers.mdb.session_run_exception=MDB0009: Session.run() throws Exception
containers.mdb.serversession_cleanup_error=MDB00010: Exception while cleaning up ServerSession [{0}]
containers.mdb.serversession_cleanup_exception=MDB00011: Exception while cleaning up ServerSession
containers.mdb.serversession_start=MDB00012: ServerSession.getSession() must be called first before calling ServerSession.start() !
containers.mdb.create_serversession_error=MDB00013: Create ServerSession error: [{0}]
containers.mdb.create_serversession_exception=MDB00014: Exception while Creating ServerSession
containers.mdb.dest_notfound=MDB00015: [{0}]: Message-driven bean destination name [{1}] not found
containers.mdb.name_notfound=MDB00016: [{0}]: Name not found exception: [{1}]
containers.mdb.create_container_exception=MDB00017: [{0}]: Exception in creating message-driven bean container: [{1}]
MDB00017.diag.cause.1=An error occurred during the message-driven bean container initialization at runtime.  The most common cause for this is that the physical resource(e.g. Queue) from which the message-driven bean is consuming either does not exist or has been configured incorrectly.  Another common error is that the message-driven bean implementation class does not correctly implement the required javax.ejb.MessageBean or MessageListener interfaces.
MDB00017.diag.check.1=Double-check that the JNDI name of the message-driven bean's resource in sun-ejb-jar.xml is correct.  It is also useful to run the verifier to check that the code requirements for the message-driven bean class have been fulfilled.
containers.mdb.container_connection_closing=MDB00018: [{0}]: Closing message-driven bean container connection
containers.mdb.container_connection_closed=MDB00019: [{0}]: Message-driven bean container connection closed
containers.mdb.close_container_exception=MDB00020: [{0}]: Exception in closing message-driven bean container: [{1}]
containers.mdb.desttype_mismatch=MDB00021: [{0}]: Message-driven bean destination type mismatch. Destination [{1}] is not of type [{2}]
containers.mdb.listen_dest=MDB00022: [{0}]: Message-driven bean listening on JMS destination [{1}]
containers.mdb.invalid_maxmsg=MDB00023: [{0}]: Invalid max-messages-load [{1}]
containers.mdb.connfactory_notfound=MDB00024: [{0}]: Message-driven bean container connection factory [{1}] not found: [{2}]
containers.mdb.connfactory_type_mismatch=MDB00025: [{0}]: Message-driven bean connection factory type mismatch. Connection factory [{1}] is not of type [{2}]
containers.mdb.start_connection_error=MDB00026: [{0}]: Unable to start message-driven bean container connection: [{1}]
containers.mdb.connection_exception=MDB00027: [{0}]: Connection exception event for [{1}], [{2}], [{3}]
containers.mdb.use_external_connfactory=MDB00028: [{0}]: Message-driven bean container using external connection factory object: [{1}]
containers.mdb.register_pool_monitor=MDB00029: [{0}]: Register message-driven bean container bean-pool monitor failed: [{1}]
containers.mdb.setup_container_exception=MDB00030: [{0}]: Exception in setting up message-driven bean container: [{1}]
containers.mdb.connfactory_notfound_use_default=MDB00031: [{0}]: Message-driven bean container connection factory [{1}] not found. Use default
containers.mdb.connfactory_nospec_use_default=MDB00032: [{0}]: Message-driven bean container connection factory not specified. Use default
containers.mdb.reconnecting=MDB00033: [{0}]: Message-driven bean container reconnecting ...
containers.mdb.reconnected=MDB00034: [{0}]: Message-driven bean container reconnected
containers.mdb.beanpool_close_exception=MDB00035: [{0}]: Exception on message-driven bean pool close: [{1}]
containers.mdb.cmt_preinvoke_error=MDB00036: [{0}]: Message-driven bean preInvoke() failed
containers.mdb.invocation_exception=MDB00037: [{0}]: Message-driven bean invocation exception: [{1}]
containers.mdb.no_msgbean_cxt=MDB00038: [{0}]: No message-driven bean context in message listener : [{1}]
containers.mdb.msg_to_destroyedbean=MDB00039: [{0}]: Message sent to a destroyed message-driven bean : [{1}] , [{2}]
containers.mdb.cmt_nosupport=MDB00040: [{0}]: Message-driven bean CMT can not be supported.
containers.mdb.onmessage_error=MDB00041: [{0}]: Message-driven bean onMessage error: [{1}]
containers.mdb.no_invocation=MDB00042: [{0}]: No invocation for message [{1}]
containers.mdb.config_exception=MDB00043: [{0}]: Exception in reading mdb-container configuration: [{1}]
containers.mdb.deploy=MDB00044: Deploying message-driven bean [{0}], consuming from [{1}]
containers.mdb.undeploy=MDB00045: Undeploying message-driven bean [{0}]
containers.mdb.preinvoke_exception=MDB00048: Message-driven bean [{0}]: Exception in preinvoke : [{1}]
MDB00048.diag.cause.1=An error occurred during the pre-invocation processing before a message-driven bean MessageListener method is called.  This is often caused by some transaction-related errors.
MDB00048.diag.check.1=Double-check the transaction configuration for the message-driven bean and consult stack trace for additional details.
containers.mdb.postinvoke_exception=MDB00049: Message-driven bean [{0}]: Exception in postinvoke : [{1}]
containers.mdb.ejb_creation_exception=MDB00050: Message-driven bean [{0}]: Exception in creating message-driven ejb : [{1}]
MDB00050.diag.cause.1=An error occurred during the lifecycle initialization of a message-driven bean instance.  This typically means a system exception was thrown from the bean code during the execution of the no-arg constructor, the setMessageDrivenContext method, or the ejbCreate method.  Common causes are failed naming service lookups coding errors, or ClassNotFound errors.
MDB00050.diag.check.1=Check the stack trace to see which method threw the exception.  If the error was caused by a NamingException, double-check the environment configuration (ejb-refs, resource-refs, etc.) in the deployment descriptor against the coded names.  It would also be useful to run the verifier.
containers.mdb_preinvoke_exception_indestroy=MDB00051: Message-driven bean [{0}] preinvoke exception in destroy message-driven ejb: [{1}]
MDB00051.diag.cause.1=An error occurred while the container was destroying an instance of a message-driven bean.  The most common cause is that a message-driven bean class threw a system exception from its ejbRemove method.
MDB00051.diag.check.1=Check the message driven bean's ejbRemove implementation to determine what would result in an exception.  Also consult the stack trace for more information.
containers.mdb.start_message_delivery_exception=MDB00052: Message-driven bean [{0}]: start message delivery exception: [{1}]
MDB00052.diag.cause.1=An error occurred while the container was enabling the message flow into a message-driven bean.  This is an internal error that typically means there is a problem with the messaging system from which the message-driven bean is consuming.
MDB00052.diag.check.1=Check the stack trace for more details.
containers.mdb.cleanup_exception=MDB00053: Message-driven bean [{0}] container cleanup exception: [{1}]
containers.mdb.set_beancontext_exception=MDB00054: Message-driven bean [{0}]: Exception setting bean context : [{1}]
containers.mdb.consumer_close_exception=MDB00055: Message-driven bean [{0}]: Exception in closing consumer : [{1}]
containers.mdb.shutdown_cleanup_start=MDB00056:  Message-driven bean [{0}]: start cleanup for shutdown
containers.mdb.shutdown_cleanup_end=MDB00057:  Message-driven bean [{0}]: finished cleanup for shutdown
containers.mdb.conn_exception_onshutdown=MDB00058: Message-driven bean [{0}]: connection exception [{1}] during server shutdown. ignore.
containers.mdb.unregister_monitormbean_exception=MDB00059: {0}]: Exception on unregistering monitor mbean: [{1}]
containers.mdb.invalid_value=MDB00060: [{0}]: Invalid value [{1}] for [{2}] , use [{3}] instead

