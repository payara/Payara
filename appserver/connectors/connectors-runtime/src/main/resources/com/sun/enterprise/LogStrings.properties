#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2012 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#
# Portions Copyright [2016-2017] [Payara Foundation and/or its affiliates]

datasource.xadatasource_error=RAR5005:Error in accessing XA resource with JNDI name [{0}] for recovery
RAR5005.diag.cause.1=The XA resource has been deleted before attempting recovery
RAR5005.diag.cause.2=The XA resource is no longer referenced in the domain.xml
RAR5005.diag.cause.3=The database server that the XA resource points to is no longer running
RAR5005.diag.cause.4=The configuration information for the XA Resource has been changed before attempting recovery
RAR5005.diag.check.1=Check that the XA Resource and the pool it points to is still defined in the domain.xml
RAR5005.diag.check.2=Check that the XA Resource is present in the list of resource-refs in the domain.xml
RAR5005.diag.check.3=Check that the Database server is up and running
RAR5005.diag.check.4=Check if the config info of the XA resource and the pool it points to is sane. In particular check that the datasourceclassname in the pool is correct and the XA resource points to the correct pool
datasource.xadatasource_error_excp=RAR5042:Error in accessing XA resource for recovery
RAR5042.diag.cause.1=The XA resource has been deleted before attempting recovery
RAR5042.diag.cause.2=The XA resource is no longer referenced in the domain.xml
RAR5042.diag.cause.3=The database server that the XA resource points to is no longer running
RAR5042.diag.cause.4=The configuration information for the XA Resource has been changed before attempting recovery
RAR5042.diag.check.1=Check that the XA Resource and the pool it points to is still defined in the domain.xml
RAR5042.diag.check.2=Check that the XA Resource is present in the list of resource-refs in the domain.xml
RAR5042.diag.check.3=Check that the Database server is up and running
RAR5042.diag.check.4=Check if the config info of the XA resource and the pool it points to is sane. In particular check that the data source class name in the pool is correct and the XA resource points to the correct pool
poolmgr.unexpected_exception=RAR5027:Unexpected exception in resource pooling
RAR5027.diag.cause.1=There is an internal server error. Please contact Payara Support with the complete log message
poolmgr.component_register_exception=RAR5029:Unexpected exception while registering component
RAR5029.diag.cause.1=Internal error while registering the resource to the transaction.
poolmgr.system_exception=RAR5031:System Exception
RAR5031.diag.cause.1=There is an internal server error. Please contact Payara Support with the complete log message
poolmgr.destroy_resource_failed=RAR5035:Unexpected exception while destroying resource from pool {0}. Exception message: {1}
RAR5035.diag.cause.1=Error while closing the physical connection.
RAR5035.diag.cause.2=Error while destroying the connector managed connection.
RAR5035.diag.check.1=Refer to the manual of the resource that is pooled (JDBC driver or Resource Adapter).
RAR5035.diag.check.2=To get exception stack, please change log level to FINE. Examine this exception stack trace for details.
poolmgr.no_resource_reference=RAR5036:Resource reference is not defined for JNDI name [{0}]
poolmgr.create_resource_error=RAR5038:Unexpected exception while creating resource for pool {0}. Exception : {1}
RAR5038.diag.cause.1=Could not create a physical connection.
RAR5038.diag.check.1=Connection pool is configured incorrectly.
RAR5038.diag.check.2=Database is running properly.
RAR5038.diag.check.3=EIS (in case of connectors) is running properly.
RAR5038.diag.check.4=SJS MQ (in case of JMS) is running properly.
RAR5038.diag.check.5=Network connection to Database/EIS/MQ is proper.
RAR5038.diag.check.6=Check linked exception (if there was a linked exception it is logged after this message).
poolmgr.create_resource_linked_error=RAR5039:Linked exception : {0}
RAR5408.diag.check.1=Check if the JDBC resource being accessed is present in the domain.xml
RAR5408.diag.check.2=Please contact Payara Support with the complete error log
resource_pool.resize_pool_error=RAR5058: Error while Resizing pool {0}. Exception : {1}
RAR5058.diag.cause.1=Could not create physical connection during connection pool resizing.
RAR5058.diag.check.1=Check your database/ EIS logs for possible connection creation errors.
RAR5058.diag.check.2=Check whether your network connection to the database or EIS is proper.
RAR6034.diag.cause.1=Resource Adapter Name of the admin object configuration is wrong
RAR6034.diag.check.1=Check whether the resource adapter is deployed.
poolmgr.get_connection_failure=RAR5117 : Failed to obtain/create connection from connection pool [ {0} ]. Reason : {1}
RAR5117.diag.cause.1=Error while obtaining a connection from the pool.
RAR5117.diag.check.1=Check your connection pool configuration.
rardeployment.invalid_connector_desc=RAR6000 : Invalid deployment descriptor, no connection-definition found either via ra.xml or annotations for the resource-adapter [ {0} ]
RAR6000.diag.cause.1=Illegal access Error while instantiating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean classes.
RAR6000.diag.check.1=Check whether the resource adapter have any specific security requirements..
rardeployment.class_not_found=RAR6001 : Class Not found : {0}
RAR6001.diag.cause.1=Error while locating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean classes.
RAR6001.diag.check.1=Resource adapter is bundled properly.
RAR6001.diag.check.2=Resource adapter jar file deployment descriptor specifies correct class names.
rardeployment.class_instantiation_error=RAR6002 : Could not instantiate class : {0}
RAR6002.diag.cause.1=Error while instantiating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean.
RAR6002.diag.check.1=Resource adapter is bundled properly with all the classes.
rardeployment.illegalaccess_error=RAR6003 : Could not access class : {0}
rardeployment.privilegedaction_error=RAR6004 : Privileged action error : {0}
RAR6004.diag.cause.1=Illegal access Error while instantiating one of the resource adapter java beans like ManagedConnectionFactory or ResourceAdapter Javabean classes.
RAR6004.diag.check.1=Check whether the resource adapter have any specific security requirements..
rardeployment.mcfcreation_error=RAR6005 : Could not create mcf : {0}
RAR6005.diag.cause.1=Error while creating ManagedConnectionFactory.
RAR6005.diag.check.1=Resource adapter is bundled properly.
RAR6005.diag.check.2=Check whether connection pool configuration has correct properties for MCF.
RAR6005.diag.check.3=Check resource adapter documentation for configuring correct properties of MCF.
rardeployment.resourcesutil_get_failure=RAR6006 : Failed to get ResourcesUtil object : {0}
RAR6006.diag.check.1=There is an internal server error. Please contact Payara Support with the complete log message
rardeployment.ra_removal_registry_failure=RAR6008 : Failed to remove Active Resource Adapter from registry {0}
RAR6008.diag.cause.1=Resource Adapter threw an exception during ResourceAdapter.stop() method.
RAR6008.diag.check.1=Check your resource adapter documentation about ResourceAdapter.stop() method.
rardeployment.resourceadapter.already.started=RAR6010 : Resource Adapter is already started/deployed  : {0}
RAR6010.diag.cause.1=Resource Adapter is already active in the connector runtime.
RAR6010.diag.check.1=Check whether a previous resource adapter deployment is still available.
rardeployment.nullPointerException=RAR6012 : Null pointer Exception : {0}
RAR6012.diag.check.1=There is an internal server error. Please contact Payara Support with the complete log message
RAR6012.diag.check.2=Check whether resource adapter threw a null pointer exception.
rardeployment.jndi_publish_failure=RAR6013 : Could not publish connector descriptor in JNDI : {0}
RAR6013.diag.check.1=There is an internal server error. Please contact Payara Support with the complete log message
rardeployment.connector_descriptor_notfound=RAR6014 : Could not find the connector descriptor in the rar : {0}
RAR6014.diag.cause.1=Incomplete or erroneous resource adapter deployment.
RAR6014.diag.check.1=Check whether the RA deployment is proper and complete.
rardeployment.connectionpool_object_null=RAR6015 : Obtained Null connection pool object from jndi : {0}
RAR6015.diag.cause.1=Connection pool is not created properly.
RAR6015.diag.check.1=Check your resource configuration, whether you are using correct connection pool name.
rardeployment.resourceadapter_not_initialized=RAR6016 : Active resource adapter not initialized.Rar Name : {0}
RAR6016.diag.cause.1=Resource Adapter is not yet initialized in the connector runtime.
RAR6016.diag.check.1=Check whether the deployment of the resource adapter is complete.
rardeployment.jndi_lookup_failed=RAR6017 : Failed to get connection pool object {0} via JNDI lookup : {1}
RAR6017.diag.cause.1=Incomplete or erroneous connection pool creation.
RAR6017.diag.check.1=Check whether connection pool is created and is proper.
rardeployment.connector_descriptor_notfound_registry=RAR6019 : Failed to get connector descriptor from registry. RarName : {0}
RAR6019.diag.cause.1=Incomplete or erroneous resource adapter deployment.
RAR6019.diag.check.1=Check whether the RA deployment is proper and complete.
rardeployment.pool_jndi_bind_failure=RAR6020 : Failed to publish connection pool object in JNDI : {0}
RAR6020.diag.check.1=Check whether the connection pool is existing.
rardeployment.mcf_creation_failure=RAR6021 :Failed to create MCF : {0}
RAR6021.diag.cause.1=Error while creating ManagedConnectionFactory.
RAR6021.diag.check.1=Resource adapter is bundled properly.
RAR6021.diag.check.2=Check whether connection pool configuration has correct properties for MCF.
RAR6021.diag.check.3=Check whether the resource adapter require security permissions to load the classes. Some adapters require getClassLoader() permission.
rardeployment.mcf_registration_failure=RAR6022 : Failed to register MCF in connector registry : {0}
RAR6022.diag.cause.1=NullPointerException while creating ManagedConnectionFactory.
RAR6022.diag.check.1=Check whether resource adapter throws null pointer exception.
rardeployment.null_mcf_in_registry=RAR6023 : Null connector descriptor in registry. Module Name is : {0}
RAR6023.diag.check.1=There is an internal server error. Please contact Payara Support with the complete log message
rardeployment.connector_descriptor_read_error=RAR6025 : Failed to read the connector deployment descriptors : {0}
RAR6025.diag.cause.1=Could not read the deployment descriptor of the resource adapter.
RAR6025.diag.check.1=Check whether the resource adapter is packaged correctly.
RAR6025.diag.check.2=Check the correctness of deployment descriptor.
rardeployment.connector_descriptor_parse_error=RAR6026 : Failed to parse the connector deployment descriptors : {0}
RAR6026.diag.cause.1=Could not parse the deployment descriptor of the resource adapter.
RAR6026.diag.check.1=Check whether the resource adapter is packaged correctly.
RAR6026.diag.check.2=Check the correctness of deployment descriptor.
rardeployment.non_1.5_compliant_rar=RAR6028 : This adapter is not 1.5 compliant : {0}
RAR6028.diag.cause.1=Resource Adapter doesnt contain resource adapter java bean.
RAR6028.diag.check.1=Make sure that the resource adapter is 1.5 compliant.
rardeployment.admin_object_delete_failure=RAR6029 : Failed to delete admin object from jndi : {0}
rardeployment.mcf_removal_failure=RAR6030 : Failed to remove the MCF : {0}
RAR6030.diag.cause.1=MCF cleanup in connector runtime failed.
RAR6030.diag.check.1=Check whether connection pool has already been deleted.
RAR6030.diag.check.2=There is an internal server error. Please contact Payara Support with the complete log message
rardeployment.connectionpool_removal_from_jndi_error=RAR6031 : Failed to unbind connectionPool from jndi : {0}
RAR6031.diag.check.1=There is an internal server error. Please contact Payara Support with the complete log message
rardeployment.start_failed=RAR6035 : Resource adapter start failed.
RAR6035.diag.cause.1=Could not start the resource adapter instance.
RAR6035.diag.cause.2=ResourceAdpater threw an exception during ResourceAdapter.start()
RAR6035.diag.check.1=Check whether the domain.xml is accessible.
RAR6035.diag.check.2=Check your resource adapter documentation for possible causes of failure during ResourceAdapter.start()
rardeployment.assoc_failed=RAR6036 : Resource adapter association failed : {0}
RAR6036.diag.cause.1=Resource Adapter throws exception during ManagedConnectionFactory.setResourceAdapter()
RAR6036.diag.check.1=If you are using third party resource adapter, contact resource adapter vendor.
RAR6036.diag.check.2=If you are a resource adapter developer, please check the resource adapter code.
rardeployment.stop_warning=RAR6037 : Resource adapter threw an exception while stopping
RAR6037.diag.cause.1=Resource Adapter threw an exception during ResourceAdapter.stop() method.
RAR6037.diag.check.1=Check your resource adapter documentation about ResourceAdapter.stop() method.

no.such.method=RAR8000 : The method {0} is not present in the class : {1}
RAR8000.diag.check.1=Check the error message to see which class doesn't have the method.
RAR8000.diag.check.2=Check the connection pool configuration property names.
RAR8000.diag.check.3=Check the jms resource configuration property names.
RAR8000.diag.check.4=Check the admin object resource configuration property names.
RAR8000.diag.check.5=Check the resource adapter configuration property names.
rar_stop_call_successful=RAR7013: Resource Adapter stop() call successful
rardeployment.incorrect_tx_support=RAR7092 : Incorrect transaction support level. This RAR has a lower tx support level in its ra.xml transaction-support attribute : {0}
RAR7092.diag.cause.1=The ra.xml specifies LocalTransaction as the transaction-support and connection-pool is configured with XATransaction support.
RAR7092.diag.cause.2=The ra.xml specifies NoTransaction as the transaction-support and connection-pool is configured with XATransaction or LocalTransaction support.
managed_con.cleanup-failed=RAR7093 : Error while cleaning up ManagedConnection
RAR7093.diag.check.1=There is an internal server error. Please contact Payara Support with the complete log message
ra.stop-successful=RAR7094: {0} shutdown successful.
ra.stop-unsuccessful=RAR7095: {0} shutdown unsuccessful. Please refer the server and/or resource adapter logs for more information.
RAR7095.diag.cause.1=The resource adapter failed to shutdown within the specified shutdown timeout.
RAR7095.diag.check.1=Check the resource adapter and server logs for any exceptions during resource adapter stop.
RAR7095.diag.check.2=Increase the shutdown-timeout-in-seconds attribute of connector-service if the resource adapter requires a longer time to shutdown.
rardeployment.exception_on_invoke_setter=RAR7096: Exception {2} while trying to set the value {1} on property {0}
RAR7096.diag.cause.1=Error while trying to invoke the setter method for the specified property.
RAR7096.diag.check.1=Check if the value and the property name specified are valid.
rardeployment.no_setter_method=RAR7097: No setter method present for the property {0} in the class {1}
RAR7097.diag.cause.1=Error in finding a mutator method for the specified property
RAR7097.diag.check.1=Check if the property has been specified correctly and an appropriate public setter method [method] is available in the class.
conmgr.mcf_not_equal=RAR7099: The mcf being used to allocate the connection and the MCF in the pool are not equal.
RAR7099.diag.cause.1=The configuration parameters like username/password for the Pool being accessed are changed and the application has not been redeployed
RAR7099.diag.cause.2=The MCF equals method is improperly implemented
RAR7099.diag.check.2=Ensure that your resource adapter properly implements the equals method
conn_pool_obj_utils.lazy_enlist-lazy_assoc-invalid-combination=RAR7106: LazyConnectionEnlistment need to be true for LazyConnectionAssociation to work, for pool: {0}
RAR7106.diag.cause.1=Connection Pool properties, LazyConnectionAssociation is true and LazyConnectionEnlistment is false which is not allowed.
unable_to_get_password_from_alias=RAR7107: Unable to retrieve password from alias
RAR7107.diag.cause.1=Alias may not exist. Ensure that alias exists.
error.loading.connector.resources.during.recovery=RAR7110: Error while loading connector resources during recovery : {0}
RAR7110.diag.cause.1=Error getting connector resource configs.
RAR7110.diag.cause.2=Lookup failed for the connector resource. Not found in jndi.
RAR7110.diag.cause.3=Error loading the embedded RAR.
RAR7110.diag.check.1=See server log for more information
resource_pool.remove_max_used_conn=RAR7113: destroying connection {0} since it has reached the maximum usage of : {1}
pool.datastructure.init.failure.exception=RAR7123: Unable to initialize custom pool data-structure. Exception occurred :
pool.waitqueue.init.failure.exception=RAR7124: Unable to initialize connection pool wait-queue. Exception occurred :
CCP.ValidateAtmostEveryIdleSecs.Set=ValidateAtmostEveryIdleSecs property set for pool : {0}
resource_pool.failed_creating_resource=RAR7127: Unable to create a new resource : {0}
connection_sharing_start=ConnectorXAResource.start() - associating connection : {0}
connection_sharing_end=ConnectorXAResource.end() called
connection_sharing_reset_association=ConnectorXAResource.resetAssociation() - dissociating connection : {0}
poolmgr.err_enlisting_res_in_getconn=RAR7132: Unable to enlist the resource in transaction. Evicting resource from pool. Pool name: [ {0} ]
rardeployment.connectorresource_removal_from_jndi_error=RAR7133: Unable to remove resource [ {0} ] from jndi
rardeployment.no_module_deployed=RAR7134: RAR [ {0} ] is not deployed
rardeployment.connector_descriptor_jndi_removal_failure=RAR7135: Unable to remove connector-descriptor of resource-adapter [{0}] from jndi
method.name.nogetterforproperty=No getter for property [ {0} ] of class [ {1} ]
rardeployment.defaultpoolresourcecreation.failed=RAR7137: Unable to create default resource for the resource-adapter
rar.undeployment.default_pool_delete_fail=RAR7138: Unable to undeploy the default pool [ {0} ]
rar.undeployment.default_resource_delete_fail=RAR7139: Unable to undeploy the default resource [ {0} ]
rardeployment.logwriter_error=RAR7140: Unable to set log-writer for resource-adapter [ {0} ] : {1}
rar.undeployment.sun_ra_pool_delete_fail=RAR7141: Unable to undeploy the sun-ra pool [ {0} ]
enterprise_util.connector_malformed_url=RAR7142: Connector classloader unable to add files to classpath
enterprise_util.remove_connector=RAR7144: The Connector module {0} has been removed. Please redeploy all applications that are using this connector module's resources.
workmanager.instantiation_error=RAR7145: Unable to obtain work manager :
tx.sync.registry.lookup.failed=RAR7146: Unable to obtain transaction synchronization registry :
jdbc.pool_not_reachable=RAR7010: Pool not reachable.
RAR7010.diag.cause.1=Could not find the connection pool specified.
RAR7010.diag.check.1=Check whether the connection pool creation was successful.
RAR7010.diag.check.2=Check whether the pool name used is correct.
exception_cancelling_timer=RAR8010: Exception while cancelling timer : {0}
exception_purging_timer=RAR8011: Exception during timer purge : {0}
exception_scheduling_timer=RAR8012: Exception while scheduling timer : {0}
RAR8012.diag.cause.1=Timer could have already been cancelled because of any unchecked exception
conn_pool_obj_utils.pooling_disabled_assocwiththread_invalid_combination=RAR8014: Associate with thread need to be false for Pooling disable to work, for pool: {0}
RAR8014.diag.cause.1=Connection Pool properties, Associate with thread is true and Pooling is disabled which is not allowed.
conn_pool_obj_utils.pooling_disabled_conn_validation_invalid_combination=RAR8015: Connection validation is set to true and Pooling is disable, for pool: {0}
RAR8015.diag.cause.1=Connection validation is useful only in a pooled environment.
conn_pool_obj_utils.pooling_disabled_validate_atmost_once_invalid_combination=RAR8016: Validate At most once period is set when Pooling is disabled, for pool : {0}
RAR8016.diag.cause.1=Validate at most once period is useful only in a pooled environment.
conn_pool_obj_utils.pooling_disabled_match_connections_invalid_combination=RAR8017: Match Connections is set to true when Pooling is disabled, for pool : {0}
RAR8017.diag.cause.1=Match Connections is useful only in a pooled environment.
conn_pool_obj_utils.pooling_disabled_max_conn_usage_invalid_combination=RAR8018: Max Connection usage is set when Pooling is disabled, for pool : {0}
RAR8018.diag.cause.1=Max Connection Usage is useful only in a pooled environment.
conn_pool_obj_utils.pooling_disabled_idle_timeout_invalid_combination=RAR8019: Idle Timeout is specified when Pooling is disabled, for pool : {0}
RAR8019.diag.cause.1=Idle Timeout is useful only in a pooled environment.
validation.constraints.violation=RAR8021: Following validation constraints violated for Java Bean of type [ {0} ] of resource-adapter [ {1} ] : Message = {2})
RAR8021.diag.cause.1=There could be erroneous values (not acceptable according to the constraints) specified in the bean
pool.get_invalid_connections_resourceexception= RAR8022: Failed to get invalid connections from Managed Connection Factory {0}. Exception = {1}; Message = {2}
RAR8022.diag.cause.1=Resource Adapter threw a ResourceException.
RAR8022.diag.check.1=Check the resource adapter's documentation.
poolmgr.flush_noop_pool_not_initialized=RAR8023: Flush Connection Pool did not happen as pool - {0} is not initialized
RAR8023.diag.cause.1=Flush Connection Pool is a NO-OP as the pool has not been initialized till now.
RAR8023.diag.check.1=Check if pool has been initialized
pool.flush_pool_failure=RAR8025: Flush Connection Pool failed for pool - {0}. Reason - {1}
RAR8025.diag.cause.1=Database server is not up and Flush tries to access the pool.
RAR8025.diag.check.1=Make sure database server is up and running.
pool.datastructure.init.failure=RAR8026: Unable to initialize custom pool data-structure : {0}
pool.waitqueue.init.failure=RAR8027: Unable to initialize custom connection pool wait-queue : {0}
pool.resource.gateway.init.failure=RAR8028: Unable to initialize custom connection pool resource-gateway : {0}
core.resource_disabled=RAR8029: Resource [ {0} ] of type [ {1} ] is not enabled
rardeployment.all_resources_removal_error=RAR8032: Failed to delete all connector resources : {0}
ccp_adm.null_pool_name=RAR8033: Deletion of pool failed. PoolName not specified.
RAR8033.diag.cause.1=PoolName specified could be null
error.reconfiguring.pool=RAR8034: Exception while reconfiguring pool [ {0} ] : , {1}
RAR8034.diag.cause.1=Unable to reconfigure connection pool.
RAR8034.diag.check.1=Review the new modifications to pool properties and attributes
error.retrieving.tx-support.from.rar=RAR8037: exception while getting transaction-support for RAR [ {0} ] , {1}
RAR8037.diag.cause.1=Unable to get connector descriptor
RAR8037.diag.check.1=check whether rar is property deployed, ra.xml or annotations equivalent are correct.
unable.to.load.ra=RAR8038: unable to load the resource-adapter [ {0} ], {1}
RAR8038.diag.cause.1=Possible exception while bootstrapping RAR or validating RAR
RAR8038.diag.check.1=Check server.log for exact cause of failure which may be due to one of the steps in \
  bootstrapping or validating or starting RAR.
unable.to.unload.ra=RAR8039: unable to unload the resource-adapter [ {0} ], {1}
RAR8039.diag.cause.1=Possible exception while destroying pools
RAR8039.diag.cause.2=Possible exception while deactivating end-points
RAR8039.diag.cause.3=Possible exception while stopping RA
RAR8039.diag.check.1=Check server.log for exact cause of failure which may be due failure while destroying pools
RAR8039.diag.check.2=Check server.log for exact cause of failure which may be due failure in de-activating end-points
RAR8039.diag.check.3=Check server.log for exact cause of failure which may be due failure while stopping RA
unable.to.delete.rac=RAR8040: Unable to delete resource-adapter-config for RAR [ {0} ]
RAR8040.diag.cause.1=Possible exception while deleting resource-adapter-config
RAR8040.diag.check.1=Check server.log for exact cause of failure that happened while deleting resource-adapter-config
unable.to.delete.rac.exception=RAR8041: Unable to delete resource-adapter-config for RAR [ {0} ], {1}
RAR8041.diag.cause.1=Possible exception while deleting resource-adapter-config
RAR8041.diag.check.1=Check the exception message while deleting the configuration of resource-adapter-config
unable.to.delete.work.security.map=RAR8042: Unable to delete work-security-map(s) for RAR [ {0} ]
RAR8042.diag.cause.1=Possible exception while deleting work-security-map configuration
RAR8042.diag.check.1=Check server.log for exact cause of failure that happened while deleting work-security-map configuration
unable.to.delete.work.security.map.exception=RAR8043: Unable to delete work-security-map(s) for RAR [ {0} ], {1}
RAR8043.diag.cause.1=Possible exception while deleting work-security-map configuration
RAR8043.diag.check.1=Check the exception message while deleting the configuration of work-security-map
unable.to.delete.admin.object=RAR8044: Unable to admin-object-resource(s) for RAR [ {0} ]
RAR8044.diag.cause.1=Possible exception while deleting admin-object-resource configuration
RAR8044.diag.check.1=Check server.log for exact cause of failure that happened while deleting admin-object-resource configuration
unable.to.delete.admin.object.exception=RAR8045: Unable to delete admin-object-resource(s) for RAR [ {0} ], {1}
RAR8045.diag.cause.1=Possible exception while deleting admin-object-resource configuration
RAR8045.diag.check.1=Check the exception message while deleting the configuration of admin-object-resource
unable.to.delete.connector.resource=RAR8046: Unable to connector-resource(s) for RAR [ {0} ]
RAR8046.diag.cause.1=Possible exception while deleting connector-resource configuration
RAR8046.diag.check.1=Check server.log for exact cause of failure that happened while deleting connector-resource configuration
unable.to.delete.connector.resource.exception=RAR8047: Unable to delete connector-resource(s) for RAR [ {0} ], {1}
RAR8047.diag.cause.1=Possible exception while deleting connector-resource configuration
RAR8047.diag.check.1=Check the exception message while deleting the configuration of connector-resource
unable.to.delete.connector.connection.pool=RAR8048: Unable to delete connector-connection-pool(s) for RAR [ {0} ]
RAR8048.diag.cause.1=Possible exception while deleting connector-connection-pool configuration
RAR8048.diag.check.1=Check server.log for exact cause of failure that happened while deleting connector-connection-pool configuration
unable.to.delete.connector.connection.pool.exception=RAR8049: Unable to delete connector-connection-pool(s) for RAR [ {0} ], {1}
RAR8049.diag.cause.1=Possible exception while deleting connector-connection-pool configuration
RAR8049.diag.check.1=Check the exception message while deleting the configuration of connector-connection-pool
error.processing.xml.for.bean.validation.mapping=RAR8050: Exception while processing xml files for detecting bean-validation-mapping\
   of RAR [ {0} ], using default validator, {1}
RAR8050.diag.cause.1=Possible invalid entries in mapping xml files
RAR8050.diag.check.1=Check whether all the constraints defined in the validation mapping xml files are valid
unable.to.stop.ra=RAR8051: unable to stop resource adapter [ {0} ] due to exception {1}, set FINEST log level\
   to print complete exception in server.log
RAR8051.diag.cause.1=unable to destroy pools or stop RA or deactivating end-points
RAR8051.diag.check.1=Check server.log for exceptions due to failure in destroying pools or stopping RA or deactivating end-points
ra.stop.timeout=RAR8052: RA  [ {0} ] stop timeout occured, {1}
RAR8052.diag.cause.1=unable to stop RA in specified time, timeout occurred
RAR8052.diag.check.1=Check whether ra.destroy() has happened successfully or any exceptions in server.log
ra.stop.failed=RAR8053: RA  [ {0} ] stop failed, {1}
RAR8053.diag.cause.1=RA stop failed
RAR8053.diag.check.1=Check server.log for any exceptions
test.connection.pool.failed=RAR8054: Exception while creating an unpooled [test] connection for pool [ {0} ], {1}
RAR8054.diag.cause.1=Unable to create a new connection
RAR8054.diag.check.1=Check whether connection parameters are correct
error.getting.connector.descriptor=RAR8055: Exception while getting connector descriptor for RAR [ {0} ], {1}
RAR8055.diag.cause.1=Possible exception while parsing ra.xml or RA is not deployed
RAR8055.diag.check.1=Check whether RA name is correct, RA is already deployed, server.log for exceptions while parsing ra.xml
unable.to.load.connection.pool=RAR8056: unable to load Connection Pool [ {0} ], {1}
RAR8056.diag.cause.1=Exception while loading RAR or resource-adapter-config or connection pool
RAR8056.diag.check.1=Check the exception, server.log for status of RAR, resource-adapter-config, exceptions while loading connection pool
resources.of.rar.exist=RAR8057: one or more resources of resource-adapter [ {0} ] exist, use '--cascade=true' to delete them during undeploy
RAR8057.diag.cause.1=resources of RAR exist during RAR undeployment
RAR8057.diag.check.1=Check whether resources of RAR exist, delete them before RAR undeployment or use '--casecade=true' \
  to delete them during RAR undeployment
unsupported.work.context=RAR8058: Unsupported work context [ {0} ] for RAR [ {1} ]
RAR8058.diag.cause.1=Required work context is not supported by the container
RAR8058.diag.check.1=Check the application server documentation for supported work context types in addition to\
   standard work contexts like TransactionContext, SecurityContext, HintsContext
error.finding.properties=RAR8059: Exception while trying to find properties of class [ {0} ], set log-level to\
   FINE for more information, {1}
RAR8059.diag.cause.1=Possible exception due to access permission or class is not available
RAR8059.diag.check.1=Check whether the class is available to the server, appropriate permissions are provided to load the class
unable.to.lookup.pool=RAR8060: Unable to lookup pool [ {0} ], {1}
RAR8060.diag.cause.1=Possible exception during pool initialization
RAR8060.diag.check.1=Check any exceptions in server.log related to pool creation
failed.to.load.deferred.ra=RAR8061: failed to load resource-adapter-config or RA [ {0} ], {1}
RAR8061.diag.cause.1=Unable to load RA or resource-adapter-config
RAR8061.diag.check.1=Possible failure to load RA or resource-adapter-config. Check server.log for exceptions
failed.to.load.deferred.resources=RAR8062: failed to load resources for RA[ {0} ], {1}
RAR8062.diag.cause.1=Unable to load resources
RAR8062.diag.check.1=Possible failure to load resources. Check server.log for exceptions
cleanup.resource.failed=RAR8066: Cleanup of a resource from pool [ {0} ] failed. Exception : {1}
RAR8066.diag.cause.1=resource-adapter might have thrown exception due to clean up failure
RAR8066.diag.check.1=check logs specific to resource-adapter in the server.log for more information.
unable_to_determine_pool_type=RAR8067: Unable to determine pool type for pool [ {0} ], using default pool type
RAR8067.diag.cause.1=Unable to determine type of pool (Default, Associated-with-thread, etc.)
RAR8067.diag.check.1=Message can be ignored as the processing can continue using the default pool type. \
Else check pool settings and any related messages in the server.log for more information.
pool.datastructure.rwlockds.init=initializing reentrant ds
datasource.xadatasource_nulluser_error=Username is null while loading the XA connection pool
datasource.xadatasource_nullpassword_error=Password is null while loading the XA connection pool
rardeployment.resource_jndi_bind_failure=RAR8072 : Failed to publish resource {0}  in JNDI : {1}
RAR8072.diag.check.1=Check whether the connection pool exists.
RAR8072.diag.check.2=Check whether the connection pool configuration is valid.
RAR8072.diag.check.3=Check whether the resource configuration is valid.
lazy_association.lazy_association_resource_handle=RAR8075: Skipping lazy connection disassociation due to Resource Handle: null
RAR8075.diag.cause.1=Resource Handle Held by the Component is Null.
lazy_association.lazy_association_resource_spec=RAR8076: Skipping lazy connection disassociation due to Resource Spec: null
RAR8076.diag.cause.1=Resource Spec from Resource Handle is Null.
lazy_association.lazy_association_resource=RAR8077: Skipping lazy connection disassociation due to Resource: null
RAR8077.diag.cause.1=Resource from Resource Handle is Null.
#------------------------------------------------------------------------------------------------------
#RAR8010 till RAR8500 reserved for connectors-runtime LogStrings.
#Please increment RAR IDs by one for any new additional messages added here.
#Add any new properties above these comments.
#------------------------------------------------------------------------------------------------------

#------------------------------------------------------------------------------------------------------
#RAR8010 till RAR8500 reserved for connectors-runtime LogStrings.
#RAR8501 till RAR8700 reserved for connectors-inbound-runtime LogStrings.
#RAR8701 till RAR8850 reserved for connectors-internal-api LogStrings.
#RAR8850 till RAR8999 reserved for work-management LogStrings.
#RAR9000 till RAR9500 reserved for jdbc-ra LogStrings.
#------------------------------------------------------------------------------------------------------

jdbc.exc_get_conn=RAR5114 : Error allocating connection : [{0}]
RAR5114.diag.cause.1=There was an SQLException while acquiring connection from the Database. Please see the detailed exception message for more information
RAR5114.diag.cause.2=The Connection pool is full and incapable of serving more requests at this point.
RAR5114.diag.check.1=Check if the database server is correctly configured
RAR5114.diag.check.2=Check if your pool size is sufficient to server all simultaneous connection requests
jdbc.unable_to_lookup_resource=Resource not found: [{0}]

